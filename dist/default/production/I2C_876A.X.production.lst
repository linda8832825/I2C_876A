

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Nov 09 15:34:44 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F876A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F876A Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  0006                     	;# 
   123  0007                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  0091                     	;# 
   157  0092                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  009F                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  0000                     	;# 
   173  0001                     	;# 
   174  0002                     	;# 
   175  0003                     	;# 
   176  0004                     	;# 
   177  0005                     	;# 
   178  0006                     	;# 
   179  0007                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0014                     	;# 
   192  0015                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  0091                     	;# 
   213  0092                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  010C                     	;# 
   223  010D                     	;# 
   224  010E                     	;# 
   225  010F                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228                           
   229                           	psect	idataCOMMON
   230  062F                     __pidataCOMMON:
   231                           
   232                           ;initializer for _BackLight_State
   233  062F  3408               	retlw	8
   234                           
   235                           	psect	nvCOMMON
   236  007A                     __pnvCOMMON:
   237  007A                     _i2c_add:
   238  007A                     	ds	1
   239  0013                     _SSPBUF	set	19
   240  0014                     _SSPCON	set	20
   241  0063                     _SSPIF	set	99
   242  0093                     _SSPADD	set	147
   243  0094                     _SSPSTAT	set	148
   244  0091                     _SSPCON2	set	145
   245  048B                     _RCEN	set	1163
   246  048E                     _ACKSTAT	set	1166
   247  048C                     _ACKEN	set	1164
   248  048D                     _ACKDT	set	1165
   249  048A                     _PEN	set	1162
   250  0489                     _RSEN	set	1161
   251  0488                     _SEN	set	1160
   252  043C                     _TRISC4	set	1084
   253  043B                     _TRISC3	set	1083
   254                           
   255                           	psect	strings
   256  0003                     __pstrings:
   257  0003                     stringtab:
   258  0003                     __stringtab:
   259  0003                     stringcode:	
   260                           ;	String table - string pointers are 1 byte each
   261                           
   262  0003                     stringdir:
   263  0003  3000               	movlw	high stringdir
   264  0004  008A               	movwf	10
   265  0005  0804               	movf	4,w
   266  0006  0A84               	incf	4,f
   267  0007  0782               	addwf	2,f
   268  0008                     __stringbase:
   269  0008  3400               	retlw	0
   270  0009                     __end_of__stringtab:
   271  0009                     STR_1:
   272  0009  3420               	retlw	32	;' '
   273  000A  344B               	retlw	75	;'K'
   274  000B  3468               	retlw	104	;'h'
   275  000C  3461               	retlw	97	;'a'
   276  000D  346C               	retlw	108	;'l'
   277  000E  3465               	retlw	101	;'e'
   278  000F  3464               	retlw	100	;'d'
   279  0010  3420               	retlw	32	;' '
   280  0011  344D               	retlw	77	;'M'
   281  0012  3461               	retlw	97	;'a'
   282  0013  3467               	retlw	103	;'g'
   283  0014  3464               	retlw	100	;'d'
   284  0015  3479               	retlw	121	;'y'
   285  0016  3400               	retlw	0
   286  0017                     STR_2:
   287  0017  3420               	retlw	32	;' '
   288  0018  3444               	retlw	68	;'D'
   289  0019  3465               	retlw	101	;'e'
   290  001A  3465               	retlw	101	;'e'
   291  001B  3470               	retlw	112	;'p'
   292  001C  3442               	retlw	66	;'B'
   293  001D  346C               	retlw	108	;'l'
   294  001E  3475               	retlw	117	;'u'
   295  001F  3465               	retlw	101	;'e'
   296  0020  3400               	retlw	0
   297                           
   298                           	psect	cinit
   299  07F5                     start_initialization:	
   300                           ; #config settings
   301                           
   302  07F5                     __initialization:
   303                           
   304                           ; Initialize objects allocated to COMMON
   305  07F5  120A  118A  262F  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   306  07FA  00FC               	movwf	__pdataCOMMON& (0+127)
   307                           
   308                           ; Clear objects allocated to COMMON
   309  07FB  01FB               	clrf	__pbssCOMMON& (0+127)
   310  07FC                     end_of_initialization:	
   311                           ;End of C runtime variable initialization code
   312                           
   313  07FC                     __end_of__initialization:
   314  07FC  0183               	clrf	3
   315  07FD  120A  118A  2EF8   	ljmp	_main	;jump to C main() function
   316                           
   317                           	psect	bssCOMMON
   318  007B                     __pbssCOMMON:
   319  007B                     _RS:
   320  007B                     	ds	1
   321                           
   322                           	psect	dataCOMMON
   323  007C                     __pdataCOMMON:
   324  007C                     _BackLight_State:
   325  007C                     	ds	1
   326                           
   327                           	psect	cstackCOMMON
   328  0070                     __pcstackCOMMON:
   329  0070                     ?_I2C_Master_Init:
   330  0070                     ??_I2C_Master_Init:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_LCD_Init:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_LCD_Write_String:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?_IO_Expander_Write:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_LCD_CMD:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?_main:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_I2C_Master_Wait:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ??_I2C_Master_Wait:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ?_I2C_Master_Start:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ??_I2C_Master_Start:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ?_I2C_Master_Stop:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     ??_I2C_Master_Stop:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     ?_I2C_Master_Write:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     ??_I2C_Master_Write:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     ?_LCD_Write_4Bit:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?_LCD_Write_Char:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     I2C_Master_Write@data:	
   379                           ; 1 bytes @ 0x0
   380                           
   381                           
   382                           ; 1 bytes @ 0x0
   383  0070                     	ds	1
   384  0071                     ??_IO_Expander_Write:
   385  0071                     IO_Expander_Write@Data:	
   386                           ; 1 bytes @ 0x1
   387                           
   388                           
   389                           ; 1 bytes @ 0x1
   390  0071                     	ds	1
   391  0072                     ??_LCD_Write_4Bit:
   392                           
   393                           ; 1 bytes @ 0x2
   394  0072                     	ds	1
   395  0073                     LCD_Write_4Bit@Nibble:
   396                           
   397                           ; 1 bytes @ 0x3
   398  0073                     	ds	1
   399  0074                     ??_LCD_CMD:
   400  0074                     ??_LCD_Write_Char:	
   401                           ; 1 bytes @ 0x4
   402                           
   403                           
   404                           ; 1 bytes @ 0x4
   405  0074                     	ds	1
   406  0075                     LCD_CMD@CMD:
   407  0075                     LCD_Write_Char@Data:	
   408                           ; 1 bytes @ 0x5
   409                           
   410                           
   411                           ; 1 bytes @ 0x5
   412  0075                     	ds	1
   413  0076                     ??_LCD_Init:
   414  0076                     ?_LCD_Set_Cursor:	
   415                           ; 1 bytes @ 0x6
   416                           
   417  0076                     ??_LCD_Write_String:	
   418                           ; 1 bytes @ 0x6
   419                           
   420  0076                     LCD_Set_Cursor@COL:	
   421                           ; 1 bytes @ 0x6
   422                           
   423  0076                     LCD_Write_String@i:	
   424                           ; 1 bytes @ 0x6
   425                           
   426                           
   427                           ; 2 bytes @ 0x6
   428  0076                     	ds	1
   429  0077                     ??_LCD_Set_Cursor:
   430                           
   431                           ; 1 bytes @ 0x7
   432  0077                     	ds	1
   433  0078                     LCD_Write_String@Str:
   434                           
   435                           ; 1 bytes @ 0x8
   436  0078                     	ds	1
   437  0079                     LCD_Init@I2C_Add:
   438  0079                     LCD_Set_Cursor@ROW:	
   439                           ; 1 bytes @ 0x9
   440                           
   441                           
   442                           ; 1 bytes @ 0x9
   443  0079                     	ds	1
   444  007A                     ??_main:
   445                           
   446                           	psect	maintext
   447  06F8                     __pmaintext:	
   448                           ; 1 bytes @ 0xA
   449 ;;
   450 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   451 ;;
   452 ;; *************** function _main *****************
   453 ;; Defined at:
   454 ;;		line 8 in file "main.c"
   455 ;; Parameters:    Size  Location     Type
   456 ;;		None
   457 ;; Auto vars:     Size  Location     Type
   458 ;;		None
   459 ;; Return value:  Size  Location     Type
   460 ;;                  1    wreg      void 
   461 ;; Registers used:
   462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   463 ;; Tracked objects:
   464 ;;		On entry : B00/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   468 ;;      Params:         0       0       0       0       0
   469 ;;      Locals:         0       0       0       0       0
   470 ;;      Temps:          0       0       0       0       0
   471 ;;      Totals:         0       0       0       0       0
   472 ;;Total ram usage:        0 bytes
   473 ;; Hardware stack levels required when called:    6
   474 ;; This function calls:
   475 ;;		_I2C_Master_Init
   476 ;;		_LCD_Init
   477 ;;		_LCD_Set_Cursor
   478 ;;		_LCD_Write_String
   479 ;; This function is called by:
   480 ;;		Startup code after reset
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           
   485                           ;psect for function _main
   486  06F8                     _main:
   487  06F8                     l939:	
   488                           ;incstack = 0
   489                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   490                           
   491                           
   492                           ;main.c: 9:   I2C_Master_Init();
   493  06F8  120A  118A  2642  120A  118A  	fcall	_I2C_Master_Init
   494  06FD                     l941:
   495                           
   496                           ;main.c: 10:   LCD_Init(0x4E);
   497  06FD  304E               	movlw	78
   498  06FE  120A  118A  2759  120A  118A  	fcall	_LCD_Init
   499  0703                     l943:
   500                           
   501                           ;main.c: 11:   LCD_Set_Cursor(1, 1);
   502  0703  01F6               	clrf	LCD_Set_Cursor@COL
   503  0704  0AF6               	incf	LCD_Set_Cursor@COL,f
   504  0705  3001               	movlw	1
   505  0706  120A  118A  2723  120A  118A  	fcall	_LCD_Set_Cursor
   506  070B                     l945:
   507                           
   508                           ;main.c: 12:   LCD_Write_String(" Khaled Magdy");
   509  070B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   510  070C  120A  118A  26D3  120A  118A  	fcall	_LCD_Write_String
   511  0711                     l947:
   512                           
   513                           ;main.c: 13:   LCD_Set_Cursor(2, 1);
   514  0711  01F6               	clrf	LCD_Set_Cursor@COL
   515  0712  0AF6               	incf	LCD_Set_Cursor@COL,f
   516  0713  3002               	movlw	2
   517  0714  120A  118A  2723  120A  118A  	fcall	_LCD_Set_Cursor
   518  0719                     l949:
   519                           
   520                           ;main.c: 14:   LCD_Write_String(" DeepBlue");
   521  0719  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   522  071A  120A  118A  26D3  120A  118A  	fcall	_LCD_Write_String
   523  071F                     l13:	
   524                           ;main.c: 15:   while(1)
   525                           
   526  071F                     l14:	
   527                           ;main.c: 16:   {;main.c: 17:   }
   528                           
   529  071F  2F1F               	goto	l13
   530  0720  120A  118A  2800   	ljmp	start
   531  0723                     __end_of_main:
   532                           
   533                           	psect	text1
   534  06D3                     __ptext1:	
   535 ;; *************** function _LCD_Write_String *****************
   536 ;; Defined at:
   537 ;;		line 116 in file "I2C_LCD.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;  Str             1    wreg     PTR unsigned char 
   540 ;;		 -> STR_2(10), STR_1(14), 
   541 ;; Auto vars:     Size  Location     Type
   542 ;;  Str             1    8[COMMON] PTR unsigned char 
   543 ;;		 -> STR_2(10), STR_1(14), 
   544 ;;  i               2    6[COMMON] int 
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   554 ;;      Params:         0       0       0       0       0
   555 ;;      Locals:         3       0       0       0       0
   556 ;;      Temps:          0       0       0       0       0
   557 ;;      Totals:         3       0       0       0       0
   558 ;;Total ram usage:        3 bytes
   559 ;; Hardware stack levels used:    1
   560 ;; Hardware stack levels required when called:    5
   561 ;; This function calls:
   562 ;;		_LCD_Write_Char
   563 ;; This function is called by:
   564 ;;		_main
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           
   569                           ;psect for function _LCD_Write_String
   570  06D3                     _LCD_Write_String:
   571                           
   572                           ;incstack = 0
   573                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   574                           ;LCD_Write_String@Str stored from wreg
   575  06D3  00F8               	movwf	LCD_Write_String@Str
   576  06D4                     l931:
   577                           
   578                           ;I2C_LCD.c: 116: void LCD_Write_String(char* Str);I2C_LCD.c: 117: {;I2C_LCD.c: 118:   fo
      +                          r(int i=0; Str[i]!='\0'; i++)
   579  06D4  01F6               	clrf	LCD_Write_String@i
   580  06D5  01F7               	clrf	LCD_Write_String@i+1
   581  06D6  2EEA               	goto	l937
   582  06D7                     l933:
   583                           
   584                           ;I2C_LCD.c: 119:     LCD_Write_Char(Str[i]);
   585  06D7  0876               	movf	LCD_Write_String@i,w
   586  06D8  0778               	addwf	LCD_Write_String@Str,w
   587  06D9  0084               	movwf	4
   588  06DA  120A  118A  2003  120A  118A  	fcall	stringdir
   589  06DF  120A  118A  26B8  120A  118A  	fcall	_LCD_Write_Char
   590  06E4                     l935:
   591  06E4  3001               	movlw	1
   592  06E5  07F6               	addwf	LCD_Write_String@i,f
   593  06E6  1803               	skipnc
   594  06E7  0AF7               	incf	LCD_Write_String@i+1,f
   595  06E8  3000               	movlw	0
   596  06E9  07F7               	addwf	LCD_Write_String@i+1,f
   597  06EA                     l937:
   598  06EA  0876               	movf	LCD_Write_String@i,w
   599  06EB  0778               	addwf	LCD_Write_String@Str,w
   600  06EC  0084               	movwf	4
   601  06ED  120A  118A  2003  120A  118A  	fcall	stringdir
   602  06F2  3A00               	xorlw	0
   603  06F3  1D03               	skipz
   604  06F4  2EF6               	goto	u81
   605  06F5  2EF7               	goto	u80
   606  06F6                     u81:
   607  06F6  2ED7               	goto	l933
   608  06F7                     u80:
   609  06F7                     l115:
   610  06F7  0008               	return
   611  06F8                     __end_of_LCD_Write_String:
   612                           
   613                           	psect	text2
   614  06B8                     __ptext2:	
   615 ;; *************** function _LCD_Write_Char *****************
   616 ;; Defined at:
   617 ;;		line 110 in file "I2C_LCD.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;  Data            1    wreg     unsigned char 
   620 ;; Auto vars:     Size  Location     Type
   621 ;;  Data            1    5[COMMON] unsigned char 
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      void 
   624 ;; Registers used:
   625 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   631 ;;      Params:         0       0       0       0       0
   632 ;;      Locals:         1       0       0       0       0
   633 ;;      Temps:          1       0       0       0       0
   634 ;;      Totals:         2       0       0       0       0
   635 ;;Total ram usage:        2 bytes
   636 ;; Hardware stack levels used:    1
   637 ;; Hardware stack levels required when called:    4
   638 ;; This function calls:
   639 ;;		_LCD_Write_4Bit
   640 ;; This function is called by:
   641 ;;		_LCD_Write_String
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           
   646                           ;psect for function _LCD_Write_Char
   647  06B8                     _LCD_Write_Char:
   648                           
   649                           ;incstack = 0
   650                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   651                           ;LCD_Write_Char@Data stored from wreg
   652  06B8  00F5               	movwf	LCD_Write_Char@Data
   653  06B9                     l761:
   654                           
   655                           ;I2C_LCD.c: 110: void LCD_Write_Char(char Data);I2C_LCD.c: 111: {;I2C_LCD.c: 112:   RS =
      +                           1;
   656  06B9  01FB               	clrf	_RS
   657  06BA  0AFB               	incf	_RS,f
   658  06BB                     l763:
   659                           
   660                           ;I2C_LCD.c: 113:   LCD_Write_4Bit(Data & 0xF0);
   661  06BB  0875               	movf	LCD_Write_Char@Data,w
   662  06BC  39F0               	andlw	240
   663  06BD  120A  118A  2685  120A  118A  	fcall	_LCD_Write_4Bit
   664                           
   665                           ;I2C_LCD.c: 114:   LCD_Write_4Bit((Data << 4) & 0xF0);
   666  06C2  0875               	movf	LCD_Write_Char@Data,w
   667  06C3  00F4               	movwf	??_LCD_Write_Char
   668  06C4  3003               	movlw	3
   669  06C5                     u55:
   670  06C5  1003               	clrc
   671  06C6  0DF4               	rlf	??_LCD_Write_Char,f
   672  06C7  3EFF               	addlw	-1
   673  06C8  1D03               	skipz
   674  06C9  2EC5               	goto	u55
   675  06CA  1003               	clrc
   676  06CB  0D74               	rlf	??_LCD_Write_Char,w
   677  06CC  39F0               	andlw	240
   678  06CD  120A  118A  2685  120A  118A  	fcall	_LCD_Write_4Bit
   679  06D2                     l109:
   680  06D2  0008               	return
   681  06D3                     __end_of_LCD_Write_Char:
   682                           
   683                           	psect	text3
   684  0723                     __ptext3:	
   685 ;; *************** function _LCD_Set_Cursor *****************
   686 ;; Defined at:
   687 ;;		line 121 in file "I2C_LCD.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;  ROW             1    wreg     unsigned char 
   690 ;;  COL             1    6[COMMON] unsigned char 
   691 ;; Auto vars:     Size  Location     Type
   692 ;;  ROW             1    9[COMMON] unsigned char 
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   702 ;;      Params:         1       0       0       0       0
   703 ;;      Locals:         1       0       0       0       0
   704 ;;      Temps:          2       0       0       0       0
   705 ;;      Totals:         4       0       0       0       0
   706 ;;Total ram usage:        4 bytes
   707 ;; Hardware stack levels used:    1
   708 ;; Hardware stack levels required when called:    5
   709 ;; This function calls:
   710 ;;		_LCD_CMD
   711 ;; This function is called by:
   712 ;;		_main
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           
   717                           ;psect for function _LCD_Set_Cursor
   718  0723                     _LCD_Set_Cursor:
   719                           
   720                           ;incstack = 0
   721                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   722                           ;LCD_Set_Cursor@ROW stored from wreg
   723  0723  00F9               	movwf	LCD_Set_Cursor@ROW
   724  0724                     l915:
   725                           
   726                           ;I2C_LCD.c: 121: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_LCD.c: 12
      +                          2: {;I2C_LCD.c: 123:   switch(ROW)
   727  0724  2F45               	goto	l925
   728  0725                     l917:
   729                           
   730                           ;I2C_LCD.c: 126:       LCD_CMD(0xC0 + COL-1);
   731  0725  0876               	movf	LCD_Set_Cursor@COL,w
   732  0726  3EBF               	addlw	191
   733  0727  120A  118A  269E  120A  118A  	fcall	_LCD_CMD
   734                           
   735                           ;I2C_LCD.c: 127:       break;
   736  072C  2F58               	goto	l124
   737  072D                     l919:
   738                           
   739                           ;I2C_LCD.c: 129:       LCD_CMD(0x94 + COL-1);
   740  072D  0876               	movf	LCD_Set_Cursor@COL,w
   741  072E  3E93               	addlw	147
   742  072F  120A  118A  269E  120A  118A  	fcall	_LCD_CMD
   743                           
   744                           ;I2C_LCD.c: 130:       break;
   745  0734  2F58               	goto	l124
   746  0735                     l921:
   747                           
   748                           ;I2C_LCD.c: 132:       LCD_CMD(0xD4 + COL-1);
   749  0735  0876               	movf	LCD_Set_Cursor@COL,w
   750  0736  3ED3               	addlw	211
   751  0737  120A  118A  269E  120A  118A  	fcall	_LCD_CMD
   752                           
   753                           ;I2C_LCD.c: 133:       break;
   754  073C  2F58               	goto	l124
   755  073D                     l923:
   756                           
   757                           ;I2C_LCD.c: 136:       LCD_CMD(0x80 + COL-1);
   758  073D  0876               	movf	LCD_Set_Cursor@COL,w
   759  073E  3E7F               	addlw	127
   760  073F  120A  118A  269E  120A  118A  	fcall	_LCD_CMD
   761                           
   762                           ;I2C_LCD.c: 137:   }
   763  0744  2F58               	goto	l124
   764  0745                     l925:
   765  0745  0879               	movf	LCD_Set_Cursor@ROW,w
   766  0746  00F7               	movwf	??_LCD_Set_Cursor
   767  0747  01F8               	clrf	??_LCD_Set_Cursor+1
   768                           
   769                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   770                           ; Switch size 1, requested type "simple"
   771                           ; Number of cases is 1, Range of values is 0 to 0
   772                           ; switch strategies available:
   773                           ; Name         Instructions Cycles
   774                           ; simple_byte            4     3 (average)
   775                           ; direct_byte           11     8 (fixed)
   776                           ; jumptable            260     6 (fixed)
   777                           ;	Chosen strategy is simple_byte
   778  0748  0878               	movf	??_LCD_Set_Cursor+1,w
   779  0749  3A00               	xorlw	0	; case 0
   780  074A  1903               	skipnz
   781  074B  2F4D               	goto	l971
   782  074C  2F3D               	goto	l923
   783  074D                     l971:
   784                           
   785                           ; Switch size 1, requested type "simple"
   786                           ; Number of cases is 3, Range of values is 2 to 4
   787                           ; switch strategies available:
   788                           ; Name         Instructions Cycles
   789                           ; simple_byte           10     6 (average)
   790                           ; direct_byte           20    11 (fixed)
   791                           ; jumptable            263     9 (fixed)
   792                           ;	Chosen strategy is simple_byte
   793  074D  0877               	movf	??_LCD_Set_Cursor,w
   794  074E  3A02               	xorlw	2	; case 2
   795  074F  1903               	skipnz
   796  0750  2F25               	goto	l917
   797  0751  3A01               	xorlw	1	; case 3
   798  0752  1903               	skipnz
   799  0753  2F2D               	goto	l919
   800  0754  3A07               	xorlw	7	; case 4
   801  0755  1903               	skipnz
   802  0756  2F35               	goto	l921
   803  0757  2F3D               	goto	l923
   804  0758                     l124:
   805  0758  0008               	return
   806  0759                     __end_of_LCD_Set_Cursor:
   807                           
   808                           	psect	text4
   809  0759                     __ptext4:	
   810 ;; *************** function _LCD_Init *****************
   811 ;; Defined at:
   812 ;;		line 67 in file "I2C_LCD.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  I2C_Add         1    wreg     unsigned char 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  I2C_Add         1    9[COMMON] unsigned char 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         0       0       0       0       0
   827 ;;      Locals:         1       0       0       0       0
   828 ;;      Temps:          3       0       0       0       0
   829 ;;      Totals:         4       0       0       0       0
   830 ;;Total ram usage:        4 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    5
   833 ;; This function calls:
   834 ;;		_IO_Expander_Write
   835 ;;		_LCD_CMD
   836 ;; This function is called by:
   837 ;;		_main
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           
   842                           ;psect for function _LCD_Init
   843  0759                     _LCD_Init:
   844                           
   845                           ;incstack = 0
   846                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   847                           ;LCD_Init@I2C_Add stored from wreg
   848  0759  00F9               	movwf	LCD_Init@I2C_Add
   849  075A                     l775:
   850                           
   851                           ;I2C_LCD.c: 67: void LCD_Init(unsigned char I2C_Add);I2C_LCD.c: 68: {;I2C_LCD.c: 69:   i
      +                          2c_add = I2C_Add;
   852  075A  0879               	movf	LCD_Init@I2C_Add,w
   853  075B  00FF               	movwf	btemp+1
   854  075C  087F               	movf	btemp+1,w
   855  075D  00FA               	movwf	_i2c_add
   856  075E                     l777:
   857                           
   858                           ;I2C_LCD.c: 70:   IO_Expander_Write(0x00);
   859  075E  3000               	movlw	0
   860  075F  120A  118A  266C  120A  118A  	fcall	_IO_Expander_Write
   861  0764                     l779:
   862                           
   863                           ;I2C_LCD.c: 71:   _delay((unsigned long)((30)*(16000000/4000.0)));
   864  0764  309C               	movlw	156
   865  0765  00F7               	movwf	??_LCD_Init+1
   866  0766  30D7               	movlw	215
   867  0767  00F6               	movwf	??_LCD_Init
   868  0768                     u97:
   869  0768  0BF6               	decfsz	??_LCD_Init,f
   870  0769  2F68               	goto	u97
   871  076A  0BF7               	decfsz	??_LCD_Init+1,f
   872  076B  2F68               	goto	u97
   873  076C                     l781:
   874                           
   875                           ;I2C_LCD.c: 72:   LCD_CMD(0x03);
   876  076C  3003               	movlw	3
   877  076D  120A  118A  269E  120A  118A  	fcall	_LCD_CMD
   878  0772                     l783:
   879                           
   880                           ;I2C_LCD.c: 73:   _delay((unsigned long)((5)*(16000000/4000.0)));
   881  0772  301A               	movlw	26
   882  0773  00F7               	movwf	??_LCD_Init+1
   883  0774  30F8               	movlw	248
   884  0775  00F6               	movwf	??_LCD_Init
   885  0776                     u107:
   886  0776  0BF6               	decfsz	??_LCD_Init,f
   887  0777  2F76               	goto	u107
   888  0778  0BF7               	decfsz	??_LCD_Init+1,f
   889  0779  2F76               	goto	u107
   890  077A  0000               	nop
   891  077B                     l785:
   892                           
   893                           ;I2C_LCD.c: 74:   LCD_CMD(0x03);
   894  077B  3003               	movlw	3
   895  077C  120A  118A  269E  120A  118A  	fcall	_LCD_CMD
   896  0781                     l787:
   897                           
   898                           ;I2C_LCD.c: 75:   _delay((unsigned long)((5)*(16000000/4000.0)));
   899  0781  301A               	movlw	26
   900  0782  00F7               	movwf	??_LCD_Init+1
   901  0783  30F8               	movlw	248
   902  0784  00F6               	movwf	??_LCD_Init
   903  0785                     u117:
   904  0785  0BF6               	decfsz	??_LCD_Init,f
   905  0786  2F85               	goto	u117
   906  0787  0BF7               	decfsz	??_LCD_Init+1,f
   907  0788  2F85               	goto	u117
   908  0789  0000               	nop
   909  078A                     l789:
   910                           
   911                           ;I2C_LCD.c: 76:   LCD_CMD(0x03);
   912  078A  3003               	movlw	3
   913  078B  120A  118A  269E  120A  118A  	fcall	_LCD_CMD
   914  0790                     l791:
   915                           
   916                           ;I2C_LCD.c: 77:   _delay((unsigned long)((5)*(16000000/4000.0)));
   917  0790  301A               	movlw	26
   918  0791  00F7               	movwf	??_LCD_Init+1
   919  0792  30F8               	movlw	248
   920  0793  00F6               	movwf	??_LCD_Init
   921  0794                     u127:
   922  0794  0BF6               	decfsz	??_LCD_Init,f
   923  0795  2F94               	goto	u127
   924  0796  0BF7               	decfsz	??_LCD_Init+1,f
   925  0797  2F94               	goto	u127
   926  0798  0000               	nop
   927  0799                     l793:
   928                           
   929                           ;I2C_LCD.c: 78:   LCD_CMD(0x02);
   930  0799  3002               	movlw	2
   931  079A  120A  118A  269E  120A  118A  	fcall	_LCD_CMD
   932  079F                     l795:
   933                           
   934                           ;I2C_LCD.c: 79:   _delay((unsigned long)((5)*(16000000/4000.0)));
   935  079F  301A               	movlw	26
   936  07A0  00F7               	movwf	??_LCD_Init+1
   937  07A1  30F8               	movlw	248
   938  07A2  00F6               	movwf	??_LCD_Init
   939  07A3                     u137:
   940  07A3  0BF6               	decfsz	??_LCD_Init,f
   941  07A4  2FA3               	goto	u137
   942  07A5  0BF7               	decfsz	??_LCD_Init+1,f
   943  07A6  2FA3               	goto	u137
   944  07A7  0000               	nop
   945  07A8                     l797:
   946                           
   947                           ;I2C_LCD.c: 80:   LCD_CMD(0x20 | (2 << 2));
   948  07A8  3028               	movlw	40
   949  07A9  120A  118A  269E  120A  118A  	fcall	_LCD_CMD
   950  07AE                     l799:
   951                           
   952                           ;I2C_LCD.c: 81:   _delay((unsigned long)((50)*(16000000/4000.0)));
   953  07AE  3002               	movlw	2
   954  07AF  00F8               	movwf	??_LCD_Init+2
   955  07B0  3004               	movlw	4
   956  07B1  00F7               	movwf	??_LCD_Init+1
   957  07B2  30BA               	movlw	186
   958  07B3  00F6               	movwf	??_LCD_Init
   959  07B4                     u147:
   960  07B4  0BF6               	decfsz	??_LCD_Init,f
   961  07B5  2FB4               	goto	u147
   962  07B6  0BF7               	decfsz	??_LCD_Init+1,f
   963  07B7  2FB4               	goto	u147
   964  07B8  0BF8               	decfsz	??_LCD_Init+2,f
   965  07B9  2FB4               	goto	u147
   966  07BA  0000               	nop
   967  07BB                     l801:
   968                           
   969                           ;I2C_LCD.c: 82:   LCD_CMD(0x0C);
   970  07BB  300C               	movlw	12
   971  07BC  120A  118A  269E  120A  118A  	fcall	_LCD_CMD
   972  07C1                     l803:
   973                           
   974                           ;I2C_LCD.c: 83:   _delay((unsigned long)((50)*(16000000/4000.0)));
   975  07C1  3002               	movlw	2
   976  07C2  00F8               	movwf	??_LCD_Init+2
   977  07C3  3004               	movlw	4
   978  07C4  00F7               	movwf	??_LCD_Init+1
   979  07C5  30BA               	movlw	186
   980  07C6  00F6               	movwf	??_LCD_Init
   981  07C7                     u157:
   982  07C7  0BF6               	decfsz	??_LCD_Init,f
   983  07C8  2FC7               	goto	u157
   984  07C9  0BF7               	decfsz	??_LCD_Init+1,f
   985  07CA  2FC7               	goto	u157
   986  07CB  0BF8               	decfsz	??_LCD_Init+2,f
   987  07CC  2FC7               	goto	u157
   988  07CD  0000               	nop
   989  07CE                     l805:
   990                           
   991                           ;I2C_LCD.c: 84:   LCD_CMD(0x01);
   992  07CE  3001               	movlw	1
   993  07CF  120A  118A  269E  120A  118A  	fcall	_LCD_CMD
   994  07D4                     l807:
   995                           
   996                           ;I2C_LCD.c: 85:   _delay((unsigned long)((50)*(16000000/4000.0)));
   997  07D4  3002               	movlw	2
   998  07D5  00F8               	movwf	??_LCD_Init+2
   999  07D6  3004               	movlw	4
  1000  07D7  00F7               	movwf	??_LCD_Init+1
  1001  07D8  30BA               	movlw	186
  1002  07D9  00F6               	movwf	??_LCD_Init
  1003  07DA                     u167:
  1004  07DA  0BF6               	decfsz	??_LCD_Init,f
  1005  07DB  2FDA               	goto	u167
  1006  07DC  0BF7               	decfsz	??_LCD_Init+1,f
  1007  07DD  2FDA               	goto	u167
  1008  07DE  0BF8               	decfsz	??_LCD_Init+2,f
  1009  07DF  2FDA               	goto	u167
  1010  07E0  0000               	nop
  1011  07E1                     l809:
  1012                           
  1013                           ;I2C_LCD.c: 86:   LCD_CMD(0x04 | 0x02);
  1014  07E1  3006               	movlw	6
  1015  07E2  120A  118A  269E  120A  118A  	fcall	_LCD_CMD
  1016  07E7                     l811:
  1017                           
  1018                           ;I2C_LCD.c: 87:   _delay((unsigned long)((50)*(16000000/4000.0)));
  1019  07E7  3002               	movlw	2
  1020  07E8  00F8               	movwf	??_LCD_Init+2
  1021  07E9  3004               	movlw	4
  1022  07EA  00F7               	movwf	??_LCD_Init+1
  1023  07EB  30BA               	movlw	186
  1024  07EC  00F6               	movwf	??_LCD_Init
  1025  07ED                     u177:
  1026  07ED  0BF6               	decfsz	??_LCD_Init,f
  1027  07EE  2FED               	goto	u177
  1028  07EF  0BF7               	decfsz	??_LCD_Init+1,f
  1029  07F0  2FED               	goto	u177
  1030  07F1  0BF8               	decfsz	??_LCD_Init+2,f
  1031  07F2  2FED               	goto	u177
  1032  07F3  0000               	nop
  1033  07F4                     l97:
  1034  07F4  0008               	return
  1035  07F5                     __end_of_LCD_Init:
  1036                           
  1037                           	psect	text5
  1038  069E                     __ptext5:	
  1039 ;; *************** function _LCD_CMD *****************
  1040 ;; Defined at:
  1041 ;;		line 104 in file "I2C_LCD.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  CMD             1    wreg     unsigned char 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  CMD             1    5[COMMON] unsigned char 
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1055 ;;      Params:         0       0       0       0       0
  1056 ;;      Locals:         1       0       0       0       0
  1057 ;;      Temps:          1       0       0       0       0
  1058 ;;      Totals:         2       0       0       0       0
  1059 ;;Total ram usage:        2 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; Hardware stack levels required when called:    4
  1062 ;; This function calls:
  1063 ;;		_LCD_Write_4Bit
  1064 ;; This function is called by:
  1065 ;;		_LCD_Init
  1066 ;;		_LCD_Set_Cursor
  1067 ;;		_LCD_SL
  1068 ;;		_LCD_SR
  1069 ;;		_LCD_Clear
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           
  1074                           ;psect for function _LCD_CMD
  1075  069E                     _LCD_CMD:
  1076                           
  1077                           ;incstack = 0
  1078                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1079                           ;LCD_CMD@CMD stored from wreg
  1080  069E  00F5               	movwf	LCD_CMD@CMD
  1081  069F                     l755:
  1082                           
  1083                           ;I2C_LCD.c: 104: void LCD_CMD(unsigned char CMD);I2C_LCD.c: 105: {;I2C_LCD.c: 106:   RS 
      +                          = 0;
  1084  069F  01FB               	clrf	_RS
  1085  06A0                     l757:
  1086                           
  1087                           ;I2C_LCD.c: 107:   LCD_Write_4Bit(CMD & 0xF0);
  1088  06A0  0875               	movf	LCD_CMD@CMD,w
  1089  06A1  39F0               	andlw	240
  1090  06A2  120A  118A  2685  120A  118A  	fcall	_LCD_Write_4Bit
  1091  06A7                     l759:
  1092                           
  1093                           ;I2C_LCD.c: 108:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  1094  06A7  0875               	movf	LCD_CMD@CMD,w
  1095  06A8  00F4               	movwf	??_LCD_CMD
  1096  06A9  3003               	movlw	3
  1097  06AA                     u45:
  1098  06AA  1003               	clrc
  1099  06AB  0DF4               	rlf	??_LCD_CMD,f
  1100  06AC  3EFF               	addlw	-1
  1101  06AD  1D03               	skipz
  1102  06AE  2EAA               	goto	u45
  1103  06AF  1003               	clrc
  1104  06B0  0D74               	rlf	??_LCD_CMD,w
  1105  06B1  39F0               	andlw	240
  1106  06B2  120A  118A  2685  120A  118A  	fcall	_LCD_Write_4Bit
  1107  06B7                     l106:
  1108  06B7  0008               	return
  1109  06B8                     __end_of_LCD_CMD:
  1110                           
  1111                           	psect	text6
  1112  0685                     __ptext6:	
  1113 ;; *************** function _LCD_Write_4Bit *****************
  1114 ;; Defined at:
  1115 ;;		line 96 in file "I2C_LCD.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;  Nibble          1    wreg     unsigned char 
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;  Nibble          1    3[COMMON] unsigned char 
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  1    wreg      void 
  1122 ;; Registers used:
  1123 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1129 ;;      Params:         0       0       0       0       0
  1130 ;;      Locals:         1       0       0       0       0
  1131 ;;      Temps:          1       0       0       0       0
  1132 ;;      Totals:         2       0       0       0       0
  1133 ;;Total ram usage:        2 bytes
  1134 ;; Hardware stack levels used:    1
  1135 ;; Hardware stack levels required when called:    3
  1136 ;; This function calls:
  1137 ;;		_IO_Expander_Write
  1138 ;; This function is called by:
  1139 ;;		_LCD_CMD
  1140 ;;		_LCD_Write_Char
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           
  1145                           ;psect for function _LCD_Write_4Bit
  1146  0685                     _LCD_Write_4Bit:
  1147                           
  1148                           ;incstack = 0
  1149                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1150                           ;LCD_Write_4Bit@Nibble stored from wreg
  1151  0685  00F3               	movwf	LCD_Write_4Bit@Nibble
  1152  0686                     l749:
  1153                           
  1154                           ;I2C_LCD.c: 96: void LCD_Write_4Bit(unsigned char Nibble);I2C_LCD.c: 97: {;I2C_LCD.c: 99
      +                          :   Nibble |= RS;
  1155  0686  087B               	movf	_RS,w
  1156  0687  00FF               	movwf	btemp+1
  1157  0688  087F               	movf	btemp+1,w
  1158  0689  04F3               	iorwf	LCD_Write_4Bit@Nibble,f
  1159  068A                     l751:
  1160                           
  1161                           ;I2C_LCD.c: 100:   IO_Expander_Write(Nibble | 0x04);
  1162  068A  0873               	movf	LCD_Write_4Bit@Nibble,w
  1163  068B  3804               	iorlw	4
  1164  068C  120A  118A  266C  120A  118A  	fcall	_IO_Expander_Write
  1165  0691                     l753:
  1166                           
  1167                           ;I2C_LCD.c: 101:   IO_Expander_Write(Nibble & 0xFB);
  1168  0691  0873               	movf	LCD_Write_4Bit@Nibble,w
  1169  0692  39FB               	andlw	251
  1170  0693  120A  118A  266C  120A  118A  	fcall	_IO_Expander_Write
  1171                           
  1172                           ;I2C_LCD.c: 102:   _delay((unsigned long)((50)*(16000000/4000000.0)));
  1173  0698  3042               	movlw	66
  1174  0699  00F2               	movwf	??_LCD_Write_4Bit
  1175  069A                     u187:
  1176  069A  0BF2               	decfsz	??_LCD_Write_4Bit,f
  1177  069B  2E9A               	goto	u187
  1178  069C  0000               	nop
  1179  069D                     l103:
  1180  069D  0008               	return
  1181  069E                     __end_of_LCD_Write_4Bit:
  1182                           
  1183                           	psect	text7
  1184  066C                     __ptext7:	
  1185 ;; *************** function _IO_Expander_Write *****************
  1186 ;; Defined at:
  1187 ;;		line 89 in file "I2C_LCD.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;  Data            1    wreg     unsigned char 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  Data            1    1[COMMON] unsigned char 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      void 
  1194 ;; Registers used:
  1195 ;;		wreg, status,2, status,0, pclath, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1201 ;;      Params:         0       0       0       0       0
  1202 ;;      Locals:         1       0       0       0       0
  1203 ;;      Temps:          0       0       0       0       0
  1204 ;;      Totals:         1       0       0       0       0
  1205 ;;Total ram usage:        1 bytes
  1206 ;; Hardware stack levels used:    1
  1207 ;; Hardware stack levels required when called:    2
  1208 ;; This function calls:
  1209 ;;		_I2C_Master_Start
  1210 ;;		_I2C_Master_Stop
  1211 ;;		_I2C_Master_Write
  1212 ;; This function is called by:
  1213 ;;		_LCD_Init
  1214 ;;		_LCD_Write_4Bit
  1215 ;;		_Backlight
  1216 ;;		_noBacklight
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           
  1221                           ;psect for function _IO_Expander_Write
  1222  066C                     _IO_Expander_Write:
  1223                           
  1224                           ;incstack = 0
  1225                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  1226                           ;IO_Expander_Write@Data stored from wreg
  1227  066C  00F1               	movwf	IO_Expander_Write@Data
  1228  066D                     l747:
  1229                           
  1230                           ;I2C_LCD.c: 89: void IO_Expander_Write(unsigned char Data);I2C_LCD.c: 90: {;I2C_LCD.c: 9
      +                          1:   I2C_Master_Start();
  1231  066D  120A  118A  2630  120A  118A  	fcall	_I2C_Master_Start
  1232                           
  1233                           ;I2C_LCD.c: 92:   I2C_Master_Write(i2c_add);
  1234  0672  087A               	movf	_i2c_add,w
  1235  0673  120A  118A  265C  120A  118A  	fcall	_I2C_Master_Write
  1236                           
  1237                           ;I2C_LCD.c: 93:   I2C_Master_Write(Data | BackLight_State);
  1238  0678  0871               	movf	IO_Expander_Write@Data,w
  1239  0679  047C               	iorwf	_BackLight_State,w
  1240  067A  120A  118A  265C  120A  118A  	fcall	_I2C_Master_Write
  1241                           
  1242                           ;I2C_LCD.c: 94:   I2C_Master_Stop();
  1243  067F  120A  118A  2639  120A  118A  	fcall	_I2C_Master_Stop
  1244  0684                     l100:
  1245  0684  0008               	return
  1246  0685                     __end_of_IO_Expander_Write:
  1247                           
  1248                           	psect	text8
  1249  065C                     __ptext8:	
  1250 ;; *************** function _I2C_Master_Write *****************
  1251 ;; Defined at:
  1252 ;;		line 46 in file "I2C_LCD.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;  data            1    wreg     unsigned char 
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  data            1    0[COMMON] unsigned char 
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      unsigned char 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0, pclath, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1266 ;;      Params:         0       0       0       0       0
  1267 ;;      Locals:         1       0       0       0       0
  1268 ;;      Temps:          0       0       0       0       0
  1269 ;;      Totals:         1       0       0       0       0
  1270 ;;Total ram usage:        1 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; Hardware stack levels required when called:    1
  1273 ;; This function calls:
  1274 ;;		_I2C_Master_Wait
  1275 ;; This function is called by:
  1276 ;;		_IO_Expander_Write
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           
  1281                           ;psect for function _I2C_Master_Write
  1282  065C                     _I2C_Master_Write:
  1283                           
  1284                           ;incstack = 0
  1285                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1286                           ;I2C_Master_Write@data stored from wreg
  1287  065C  00F0               	movwf	I2C_Master_Write@data
  1288  065D                     l743:
  1289                           
  1290                           ;I2C_LCD.c: 46: unsigned char I2C_Master_Write(unsigned char data);I2C_LCD.c: 47: {;I2C_
      +                          LCD.c: 48:   I2C_Master_Wait();
  1291  065D  120A  118A  264F  120A  118A  	fcall	_I2C_Master_Wait
  1292  0662                     l745:
  1293                           
  1294                           ;I2C_LCD.c: 49:   SSPBUF = data;
  1295  0662  0870               	movf	I2C_Master_Write@data,w
  1296  0663  1283               	bcf	3,5	;RP0=0, select bank0
  1297  0664  1303               	bcf	3,6	;RP1=0, select bank0
  1298  0665  0093               	movwf	19	;volatile
  1299  0666                     l85:	
  1300                           ;I2C_LCD.c: 50:   while(!SSPIF);
  1301                           
  1302  0666  1D8C               	btfss	12,3	;volatile
  1303  0667  2E69               	goto	u31
  1304  0668  2E6A               	goto	u30
  1305  0669                     u31:
  1306  0669  2E66               	goto	l85
  1307  066A                     u30:
  1308  066A                     l87:
  1309                           
  1310                           ;I2C_LCD.c: 51:   SSPIF = 0;
  1311  066A  118C               	bcf	12,3	;volatile
  1312  066B                     l88:	
  1313                           ;I2C_LCD.c: 52:   return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  1314                           
  1315  066B  0008               	return
  1316  066C                     __end_of_I2C_Master_Write:
  1317                           
  1318                           	psect	text9
  1319  0639                     __ptext9:	
  1320 ;; *************** function _I2C_Master_Stop *****************
  1321 ;; Defined at:
  1322 ;;		line 29 in file "I2C_LCD.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;		None
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;		None
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		wreg, status,2, status,0, pclath, cstack
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1336 ;;      Params:         0       0       0       0       0
  1337 ;;      Locals:         0       0       0       0       0
  1338 ;;      Temps:          0       0       0       0       0
  1339 ;;      Totals:         0       0       0       0       0
  1340 ;;Total ram usage:        0 bytes
  1341 ;; Hardware stack levels used:    1
  1342 ;; Hardware stack levels required when called:    1
  1343 ;; This function calls:
  1344 ;;		_I2C_Master_Wait
  1345 ;; This function is called by:
  1346 ;;		_IO_Expander_Write
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           
  1351                           ;psect for function _I2C_Master_Stop
  1352  0639                     _I2C_Master_Stop:
  1353  0639                     l739:	
  1354                           ;incstack = 0
  1355                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1356                           
  1357                           
  1358                           ;I2C_LCD.c: 31:   I2C_Master_Wait();
  1359  0639  120A  118A  264F  120A  118A  	fcall	_I2C_Master_Wait
  1360  063E                     l741:
  1361                           
  1362                           ;I2C_LCD.c: 32:   PEN = 1;
  1363  063E  1683               	bsf	3,5	;RP0=1, select bank1
  1364  063F  1303               	bcf	3,6	;RP1=0, select bank1
  1365  0640  1511               	bsf	17,2	;volatile
  1366  0641                     l76:
  1367  0641  0008               	return
  1368  0642                     __end_of_I2C_Master_Stop:
  1369                           
  1370                           	psect	text10
  1371  0630                     __ptext10:	
  1372 ;; *************** function _I2C_Master_Start *****************
  1373 ;; Defined at:
  1374 ;;		line 19 in file "I2C_LCD.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;		None
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;		None
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      void 
  1381 ;; Registers used:
  1382 ;;		wreg, status,2, status,0, pclath, cstack
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1388 ;;      Params:         0       0       0       0       0
  1389 ;;      Locals:         0       0       0       0       0
  1390 ;;      Temps:          0       0       0       0       0
  1391 ;;      Totals:         0       0       0       0       0
  1392 ;;Total ram usage:        0 bytes
  1393 ;; Hardware stack levels used:    1
  1394 ;; Hardware stack levels required when called:    1
  1395 ;; This function calls:
  1396 ;;		_I2C_Master_Wait
  1397 ;; This function is called by:
  1398 ;;		_IO_Expander_Write
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           
  1403                           ;psect for function _I2C_Master_Start
  1404  0630                     _I2C_Master_Start:
  1405  0630                     l735:	
  1406                           ;incstack = 0
  1407                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1408                           
  1409                           
  1410                           ;I2C_LCD.c: 21:   I2C_Master_Wait();
  1411  0630  120A  118A  264F  120A  118A  	fcall	_I2C_Master_Wait
  1412  0635                     l737:
  1413                           
  1414                           ;I2C_LCD.c: 22:   SEN = 1;
  1415  0635  1683               	bsf	3,5	;RP0=1, select bank1
  1416  0636  1303               	bcf	3,6	;RP1=0, select bank1
  1417  0637  1411               	bsf	17,0	;volatile
  1418  0638                     l70:
  1419  0638  0008               	return
  1420  0639                     __end_of_I2C_Master_Start:
  1421                           
  1422                           	psect	text11
  1423  064F                     __ptext11:	
  1424 ;; *************** function _I2C_Master_Wait *****************
  1425 ;; Defined at:
  1426 ;;		line 15 in file "I2C_LCD.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, status,2
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1440 ;;      Params:         0       0       0       0       0
  1441 ;;      Locals:         0       0       0       0       0
  1442 ;;      Temps:          0       0       0       0       0
  1443 ;;      Totals:         0       0       0       0       0
  1444 ;;Total ram usage:        0 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; This function calls:
  1447 ;;		Nothing
  1448 ;; This function is called by:
  1449 ;;		_I2C_Master_Start
  1450 ;;		_I2C_Master_Stop
  1451 ;;		_I2C_Master_Write
  1452 ;;		_I2C_Master_RepeatedStart
  1453 ;;		_I2C_ACK
  1454 ;;		_I2C_NACK
  1455 ;;		_I2C_Read_Byte
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           
  1460                           ;psect for function _I2C_Master_Wait
  1461  064F                     _I2C_Master_Wait:
  1462  064F                     l731:	
  1463                           ;incstack = 0
  1464                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1465                           
  1466  064F                     l64:	
  1467                           ;I2C_LCD.c: 17:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1468                           
  1469  064F  1683               	bsf	3,5	;RP0=1, select bank1
  1470  0650  1303               	bcf	3,6	;RP1=0, select bank1
  1471  0651  1914               	btfsc	20,2	;volatile
  1472  0652  2E54               	goto	u11
  1473  0653  2E55               	goto	u10
  1474  0654                     u11:
  1475  0654  2E4F               	goto	l64
  1476  0655                     u10:
  1477  0655                     l733:
  1478  0655  0811               	movf	17,w	;volatile
  1479  0656  391F               	andlw	31
  1480  0657  1D03               	btfss	3,2
  1481  0658  2E5A               	goto	u21
  1482  0659  2E5B               	goto	u20
  1483  065A                     u21:
  1484  065A  2E4F               	goto	l64
  1485  065B                     u20:
  1486  065B                     l67:
  1487  065B  0008               	return
  1488  065C                     __end_of_I2C_Master_Wait:
  1489                           
  1490                           	psect	text12
  1491  0642                     __ptext12:	
  1492 ;; *************** function _I2C_Master_Init *****************
  1493 ;; Defined at:
  1494 ;;		line 6 in file "I2C_LCD.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;		None
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		wreg, status,2
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1508 ;;      Params:         0       0       0       0       0
  1509 ;;      Locals:         0       0       0       0       0
  1510 ;;      Temps:          0       0       0       0       0
  1511 ;;      Totals:         0       0       0       0       0
  1512 ;;Total ram usage:        0 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; This function calls:
  1515 ;;		Nothing
  1516 ;; This function is called by:
  1517 ;;		_main
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           
  1522                           ;psect for function _I2C_Master_Init
  1523  0642                     _I2C_Master_Init:
  1524  0642                     l765:	
  1525                           ;incstack = 0
  1526                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  1527                           
  1528                           
  1529                           ;I2C_LCD.c: 8:   SSPCON = 0x28;
  1530  0642  3028               	movlw	40
  1531  0643  1283               	bcf	3,5	;RP0=0, select bank0
  1532  0644  1303               	bcf	3,6	;RP1=0, select bank0
  1533  0645  0094               	movwf	20	;volatile
  1534  0646                     l767:
  1535                           
  1536                           ;I2C_LCD.c: 9:   SSPCON2 = 0x00;
  1537  0646  1683               	bsf	3,5	;RP0=1, select bank1
  1538  0647  1303               	bcf	3,6	;RP1=0, select bank1
  1539  0648  0191               	clrf	17	;volatile
  1540  0649                     l769:
  1541                           
  1542                           ;I2C_LCD.c: 10:   SSPSTAT = 0x00;
  1543  0649  0194               	clrf	20	;volatile
  1544                           
  1545                           ;I2C_LCD.c: 11:   SSPADD = ((16000000/4)/100000) - 1;
  1546  064A  3027               	movlw	39
  1547  064B  0093               	movwf	19	;volatile
  1548  064C                     l771:
  1549                           
  1550                           ;I2C_LCD.c: 12:   TRISC3 = 1;
  1551  064C  1587               	bsf	7,3	;volatile
  1552  064D                     l773:
  1553                           
  1554                           ;I2C_LCD.c: 13:   TRISC4 = 1;
  1555  064D  1607               	bsf	7,4	;volatile
  1556  064E                     l61:
  1557  064E  0008               	return
  1558  064F                     __end_of_I2C_Master_Init:
  1559  007E                     btemp	set	126	;btemp
  1560  007E                     wtemp0	set	126

Data Sizes:
    Strings     24
    Constant    0
    Data        1
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Write_String@Str	PTR unsigned char  size(1) Largest target is 14
		 -> STR_2(CODE[10]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _main->_LCD_Set_Cursor
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     733
                    _I2C_Master_Init
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     3     3      0     246
                                              6 COMMON     3     3      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0      90
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     352
                                              6 COMMON     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             4     4      0     135
                                              6 COMMON     4     4      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0      90
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_4Bit                                       2     2      0      60
                                              2 COMMON     2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (4) _IO_Expander_Write                                    1     1      0      30
                                              1 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      15
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _LCD_Init
     _IO_Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Set_Cursor
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       D      12        0.0%
ABS                  0      0       D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Nov 09 15:34:44 2020

                         pc 0002                          l13 071F                          l14 071F  
                        l61 064E                          l70 0638                          l64 064F  
                        l67 065B                          l76 0641                          l85 0666  
                        l87 066A                          l88 066B                          l97 07F4  
                        u10 0655                          u11 0654                          u20 065B  
                        u21 065A                          u30 066A                          u31 0669  
                        u45 06AA                          u55 06C5                          _RS 007B  
                        u80 06F7                          u81 06F6                          u97 0768  
                        fsr 0004                         l100 0684                         l103 069D  
                       l106 06B7                         l115 06F7                         l124 0758  
                       l109 06D2                         l801 07BB                         l731 064F  
                       l811 07E7                         l803 07C1                         l733 0655  
                       l741 063E                         l805 07CE                         l735 0630  
                       l743 065D                         l751 068A                         l807 07D4  
                       l737 0635                         l745 0662                         l753 0691  
                       l809 07E1                         l921 0735                         l761 06B9  
                       l771 064C                         l739 0639                         l747 066D  
                       l755 069F                         l923 073D                         l915 0724  
                       l763 06BB                         l931 06D4                         l773 064D  
                       l765 0642                         l749 0686                         l757 06A0  
                       l781 076C                         l917 0725                         l925 0745  
                       l933 06D7                         l941 06FD                         l767 0646  
                       l759 06A7                         l791 0790                         l783 0772  
                       l775 075A                         l919 072D                         l935 06E4  
                       l943 0703                         l769 0649                         l793 0799  
                       l785 077B                         l777 075E                         l937 06EA  
                       l945 070B                         l795 079F                         l787 0781  
                       l779 0764                         l971 074D                         l947 0711  
                       l939 06F8                         l797 07A8                         l789 078A  
                       l949 0719                         l799 07AE                         u107 0776  
                       u117 0785                         u127 0794                         u137 07A3  
                       u147 07B4                         u157 07C7                         u167 07DA  
                       _PEN 048A                         u177 07ED                         u187 069A  
                       _SEN 0488                         fsr0 0004             __end_of_LCD_CMD 06B8  
       LCD_Write_String@Str 0078              _LCD_Set_Cursor 0723                        STR_1 0009  
                      STR_2 0017                        _RCEN 048B                        _RSEN 0489  
         ?_LCD_Write_String 0070                        _main 06F8                        btemp 007E  
                      start 0000          ??_LCD_Write_String 0076        LCD_Write_4Bit@Nibble 0073  
          __end_of_LCD_Init 07F5            ?_I2C_Master_Init 0070            ?_I2C_Master_Wait 0070  
          ?_I2C_Master_Stop 0070                       ?_main 0070                       _ACKEN 048C  
                     _ACKDT 048D                       _SSPIF 0063      __end_of_LCD_Set_Cursor 0759  
                     pclath 000A                       status 0003                       wtemp0 007E  
            _LCD_Write_4Bit 0685              _LCD_Write_Char 06B8             __initialization 07F5  
              __end_of_main 0723           _IO_Expander_Write 066C          ?_IO_Expander_Write 0070  
                    ??_main 007A                   ??_LCD_CMD 0074           ?_I2C_Master_Start 0070  
         ?_I2C_Master_Write 0070         ??_IO_Expander_Write 0071             ?_LCD_Set_Cursor 0076  
        ??_I2C_Master_Start 0070          ??_I2C_Master_Write 0070                      _SSPADD 0093  
                    _TRISC3 043B                      _TRISC4 043C                      _SSPCON 0014  
                    _SSPBUF 0013      __end_of_LCD_Write_4Bit 069E      __end_of_LCD_Write_Char 06D3  
 __end_of_IO_Expander_Write 0685                __pdataCOMMON 007C     __end_of__initialization 07FC  
                 ?_LCD_Init 0070             ?_LCD_Write_4Bit 0070             ?_LCD_Write_Char 0070  
            __pcstackCOMMON 0070                  ??_LCD_Init 0076                  __pnvCOMMON 007A  
__size_of_IO_Expander_Write 0019                  __pmaintext 06F8                     _ACKSTAT 048E  
 __size_of_LCD_Write_String 0025                     _LCD_CMD 069E                     _SSPCON2 0091  
                   _SSPSTAT 0094                  __stringtab 0003                     _i2c_add 007A  
          ??_LCD_Set_Cursor 0077                     __ptext1 06D3                     __ptext2 06B8  
                   __ptext3 0723                     __ptext4 0759                     __ptext5 069E  
                   __ptext6 0685                     __ptext7 066C                     __ptext8 065C  
                   __ptext9 0639    __size_of_I2C_Master_Init 000D    __size_of_I2C_Master_Wait 000D  
  __size_of_I2C_Master_Stop 0009        end_of_initialization 07FC   __size_of_I2C_Master_Start 0009  
 __size_of_I2C_Master_Write 0010                  LCD_CMD@CMD 0075            ??_LCD_Write_4Bit 0072  
         LCD_Write_String@i 0076            ??_LCD_Write_Char 0074           __size_of_LCD_Init 009C  
          _LCD_Write_String 06D3               __pidataCOMMON 062F         start_initialization 07F5  
         ??_I2C_Master_Init 0070           ??_I2C_Master_Wait 0070           ??_I2C_Master_Stop 0070  
                  ?_LCD_CMD 0070                 __pbssCOMMON 007B                   ___latbits 0002  
          _I2C_Master_Start 0630            _I2C_Master_Write 065C       IO_Expander_Write@Data 0071  
      I2C_Master_Write@data 0070                   __pstrings 0003                    _LCD_Init 0759  
               __stringbase 0008            __size_of_LCD_CMD 001A    __end_of_LCD_Write_String 06F8  
        __end_of__stringtab 0009             _I2C_Master_Init 0642             _I2C_Master_Wait 064F  
           _I2C_Master_Stop 0639                    __ptext10 0630                    __ptext11 064F  
                  __ptext12 0642     __size_of_LCD_Set_Cursor 0036             _BackLight_State 007C  
             __size_of_main 002B    __end_of_I2C_Master_Start 0639    __end_of_I2C_Master_Write 066C  
        LCD_Write_Char@Data 0075                   stringcode 0003     __size_of_LCD_Write_4Bit 0019  
   __size_of_LCD_Write_Char 001B     __end_of_I2C_Master_Init 064F     __end_of_I2C_Master_Wait 065C  
   __end_of_I2C_Master_Stop 0642             LCD_Init@I2C_Add 0079                    stringdir 0003  
                  stringtab 0003           LCD_Set_Cursor@COL 0076           LCD_Set_Cursor@ROW 0079  
