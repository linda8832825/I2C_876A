

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Nov 19 09:27:39 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F876A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F876A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000E                     	;# 
   133  000F                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001B                     	;# 
   148  001C                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0086                     	;# 
   155  0087                     	;# 
   156  008C                     	;# 
   157  008D                     	;# 
   158  008E                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  0000                     	;# 
   176  0001                     	;# 
   177  0002                     	;# 
   178  0003                     	;# 
   179  0004                     	;# 
   180  0005                     	;# 
   181  0006                     	;# 
   182  0007                     	;# 
   183  000A                     	;# 
   184  000B                     	;# 
   185  000C                     	;# 
   186  000D                     	;# 
   187  000E                     	;# 
   188  000E                     	;# 
   189  000F                     	;# 
   190  0010                     	;# 
   191  0011                     	;# 
   192  0012                     	;# 
   193  0013                     	;# 
   194  0014                     	;# 
   195  0015                     	;# 
   196  0015                     	;# 
   197  0016                     	;# 
   198  0017                     	;# 
   199  0018                     	;# 
   200  0019                     	;# 
   201  001A                     	;# 
   202  001B                     	;# 
   203  001B                     	;# 
   204  001C                     	;# 
   205  001D                     	;# 
   206  001E                     	;# 
   207  001F                     	;# 
   208  0081                     	;# 
   209  0085                     	;# 
   210  0086                     	;# 
   211  0087                     	;# 
   212  008C                     	;# 
   213  008D                     	;# 
   214  008E                     	;# 
   215  0091                     	;# 
   216  0092                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  009F                     	;# 
   225  010C                     	;# 
   226  010D                     	;# 
   227  010E                     	;# 
   228  010F                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231                           
   232                           	psect	idataCOMMON
   233  05E4                     __pidataCOMMON:
   234                           
   235                           ;initializer for _BackLight_State
   236  05E4  3408               	retlw	8
   237                           
   238                           	psect	nvCOMMON
   239  007A                     __pnvCOMMON:
   240  007A                     _i2c_add:
   241  007A                     	ds	1
   242  0013                     _SSPBUF	set	19
   243  0014                     _SSPCON	set	20
   244  0063                     _SSPIF	set	99
   245  0030                     _RB0	set	48
   246  0093                     _SSPADD	set	147
   247  0094                     _SSPSTAT	set	148
   248  0091                     _SSPCON2	set	145
   249  048B                     _RCEN	set	1163
   250  048E                     _ACKSTAT	set	1166
   251  048C                     _ACKEN	set	1164
   252  048D                     _ACKDT	set	1165
   253  048A                     _PEN	set	1162
   254  0489                     _RSEN	set	1161
   255  0488                     _SEN	set	1160
   256  043C                     _TRISC4	set	1084
   257  043B                     _TRISC3	set	1083
   258  0430                     _TRISB0	set	1072
   259                           
   260                           	psect	strings
   261  0003                     __pstrings:
   262  0003                     stringtab:
   263  0003                     __stringtab:
   264  0003                     stringcode:	
   265                           ;	String table - string pointers are 1 byte each
   266                           
   267  0003                     stringdir:
   268  0003  3000               	movlw	high stringdir
   269  0004  008A               	movwf	10
   270  0005  0804               	movf	4,w
   271  0006  0A84               	incf	4,f
   272  0007  0782               	addwf	2,f
   273  0008                     __stringbase:
   274  0008  3400               	retlw	0
   275  0009                     __end_of__stringtab:
   276  0009                     STR_1:
   277  0009  3420               	retlw	32	;' '
   278  000A  3469               	retlw	105	;'i'
   279  000B  3469               	retlw	105	;'i'
   280  000C  3469               	retlw	105	;'i'
   281  000D  3469               	retlw	105	;'i'
   282  000E  3469               	retlw	105	;'i'
   283  000F  3469               	retlw	105	;'i'
   284  0010  3469               	retlw	105	;'i'
   285  0011  3469               	retlw	105	;'i'
   286  0012  3469               	retlw	105	;'i'
   287  0013  3469               	retlw	105	;'i'
   288  0014  3469               	retlw	105	;'i'
   289  0015  3469               	retlw	105	;'i'
   290  0016  3469               	retlw	105	;'i'
   291  0017  3469               	retlw	105	;'i'
   292  0018  3469               	retlw	105	;'i'
   293  0019  3469               	retlw	105	;'i'
   294  001A  3469               	retlw	105	;'i'
   295  001B  3400               	retlw	0
   296  001C                     STR_4:
   297  001C  3420               	retlw	32	;' '
   298  001D  343A               	retlw	58	;':'
   299  001E  3429               	retlw	41	;')'
   300  001F  3429               	retlw	41	;')'
   301  0020  3429               	retlw	41	;')'
   302  0021  3429               	retlw	41	;')'
   303  0022  3429               	retlw	41	;')'
   304  0023  3429               	retlw	41	;')'
   305  0024  3429               	retlw	41	;')'
   306  0025  3429               	retlw	41	;')'
   307  0026  3429               	retlw	41	;')'
   308  0027  3429               	retlw	41	;')'
   309  0028  3429               	retlw	41	;')'
   310  0029  3429               	retlw	41	;')'
   311  002A  3429               	retlw	41	;')'
   312  002B  3429               	retlw	41	;')'
   313  002C  3429               	retlw	41	;')'
   314  002D  3400               	retlw	0
   315  002E                     STR_2:
   316  002E  3420               	retlw	32	;' '
   317  002F  3432               	retlw	50	;'2'
   318  0030  3432               	retlw	50	;'2'
   319  0031  3432               	retlw	50	;'2'
   320  0032  3432               	retlw	50	;'2'
   321  0033  3432               	retlw	50	;'2'
   322  0034  3432               	retlw	50	;'2'
   323  0035  3432               	retlw	50	;'2'
   324  0036  3432               	retlw	50	;'2'
   325  0037  3432               	retlw	50	;'2'
   326  0038  3432               	retlw	50	;'2'
   327  0039  3432               	retlw	50	;'2'
   328  003A  3432               	retlw	50	;'2'
   329  003B  3400               	retlw	0
   330  003C                     STR_3:
   331  003C  3420               	retlw	32	;' '
   332  003D  3463               	retlw	99	;'c'
   333  003E  3463               	retlw	99	;'c'
   334  003F  3463               	retlw	99	;'c'
   335  0040  3463               	retlw	99	;'c'
   336  0041  3463               	retlw	99	;'c'
   337  0042  3463               	retlw	99	;'c'
   338  0043  3463               	retlw	99	;'c'
   339  0044  3463               	retlw	99	;'c'
   340  0045  3463               	retlw	99	;'c'
   341  0046  3463               	retlw	99	;'c'
   342  0047  3400               	retlw	0
   343                           
   344                           	psect	cinit
   345  07F5                     start_initialization:	
   346                           ; #config settings
   347                           
   348  07F5                     __initialization:
   349                           
   350                           ; Initialize objects allocated to COMMON
   351  07F5  120A  118A  25E4  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   352  07FA  00FC               	movwf	__pdataCOMMON& (0+127)
   353                           
   354                           ; Clear objects allocated to COMMON
   355  07FB  01FB               	clrf	__pbssCOMMON& (0+127)
   356  07FC                     end_of_initialization:	
   357                           ;End of C runtime variable initialization code
   358                           
   359  07FC                     __end_of__initialization:
   360  07FC  0183               	clrf	3
   361  07FD  120A  118A  2EBB   	ljmp	_main	;jump to C main() function
   362                           
   363                           	psect	bssCOMMON
   364  007B                     __pbssCOMMON:
   365  007B                     _RS:
   366  007B                     	ds	1
   367                           
   368                           	psect	dataCOMMON
   369  007C                     __pdataCOMMON:
   370  007C                     _BackLight_State:
   371  007C                     	ds	1
   372                           
   373                           	psect	cstackCOMMON
   374  0070                     __pcstackCOMMON:
   375  0070                     ?_I2C_Master_Init:
   376  0070                     ??_I2C_Master_Init:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?_LCD_Init:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_write:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_Delay:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ?_LCD_Write_String:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?_IO_Expander_Write:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_LCD_CMD:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?_main:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_I2C_Master_Wait:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ??_I2C_Master_Wait:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_I2C_Master_Start:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ??_I2C_Master_Start:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_I2C_Master_Stop:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ??_I2C_Master_Stop:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_I2C_Master_Write:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ??_I2C_Master_Write:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_LCD_Write_4Bit:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_LCD_Write_Char:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     I2C_Master_Write@data:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     Delay@counter:	
   434                           ; 1 bytes @ 0x0
   435                           
   436                           
   437                           ; 2 bytes @ 0x0
   438  0070                     	ds	1
   439  0071                     ??_IO_Expander_Write:
   440  0071                     IO_Expander_Write@Data:	
   441                           ; 1 bytes @ 0x1
   442                           
   443                           
   444                           ; 1 bytes @ 0x1
   445  0071                     	ds	1
   446  0072                     ??_Delay:
   447  0072                     ??_LCD_Write_4Bit:	
   448                           ; 1 bytes @ 0x2
   449                           
   450                           
   451                           ; 1 bytes @ 0x2
   452  0072                     	ds	1
   453  0073                     LCD_Write_4Bit@Nibble:
   454                           
   455                           ; 1 bytes @ 0x3
   456  0073                     	ds	1
   457  0074                     ??_LCD_CMD:
   458  0074                     ??_LCD_Write_Char:	
   459                           ; 1 bytes @ 0x4
   460                           
   461                           
   462                           ; 1 bytes @ 0x4
   463  0074                     	ds	1
   464  0075                     LCD_CMD@CMD:
   465  0075                     LCD_Write_Char@Data:	
   466                           ; 1 bytes @ 0x5
   467                           
   468                           
   469                           ; 1 bytes @ 0x5
   470  0075                     	ds	1
   471  0076                     ??_LCD_Init:
   472  0076                     ?_LCD_Set_Cursor:	
   473                           ; 1 bytes @ 0x6
   474                           
   475  0076                     ??_LCD_Write_String:	
   476                           ; 1 bytes @ 0x6
   477                           
   478  0076                     LCD_Set_Cursor@COL:	
   479                           ; 1 bytes @ 0x6
   480                           
   481  0076                     LCD_Write_String@i:	
   482                           ; 1 bytes @ 0x6
   483                           
   484                           
   485                           ; 2 bytes @ 0x6
   486  0076                     	ds	1
   487  0077                     ??_LCD_Set_Cursor:
   488                           
   489                           ; 1 bytes @ 0x7
   490  0077                     	ds	1
   491  0078                     LCD_Write_String@Str:
   492                           
   493                           ; 1 bytes @ 0x8
   494  0078                     	ds	1
   495  0079                     LCD_Init@I2C_Add:
   496  0079                     LCD_Set_Cursor@ROW:	
   497                           ; 1 bytes @ 0x9
   498                           
   499                           
   500                           ; 1 bytes @ 0x9
   501  0079                     	ds	1
   502  007A                     ??_write:
   503  007A                     ??_main:	
   504                           ; 1 bytes @ 0xA
   505                           
   506                           
   507                           	psect	maintext
   508  06BB                     __pmaintext:	
   509                           ; 1 bytes @ 0xA
   510 ;;
   511 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   512 ;;
   513 ;; *************** function _main *****************
   514 ;; Defined at:
   515 ;;		line 7 in file "main.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;		None
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   524 ;; Tracked objects:
   525 ;;		On entry : B00/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   529 ;;      Params:         0       0       0       0       0
   530 ;;      Locals:         0       0       0       0       0
   531 ;;      Temps:          0       0       0       0       0
   532 ;;      Totals:         0       0       0       0       0
   533 ;;Total ram usage:        0 bytes
   534 ;; Hardware stack levels required when called:    7
   535 ;; This function calls:
   536 ;;		_Delay
   537 ;;		_I2C_Master_Init
   538 ;;		_LCD_Init
   539 ;;		_write
   540 ;; This function is called by:
   541 ;;		Startup code after reset
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           
   546                           ;psect for function _main
   547  06BB                     _main:
   548  06BB                     l976:	
   549                           ;incstack = 0
   550                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   551                           
   552                           
   553                           ;main.c: 8:         Delay(50000);
   554  06BB  1683               	bsf	3,5	;RP0=1, select bank1
   555  06BC  1303               	bcf	3,6	;RP1=0, select bank1
   556  06BD  1006               	bcf	6,0	;volatile
   557  06BE                     l978:
   558                           
   559                           ;main.c: 9:         RB0=0;
   560  06BE  120A  118A  25F7  120A  118A  	fcall	_I2C_Master_Init
   561  06C3                     l980:
   562                           
   563                           ;main.c: 10:         Delay(50000);
   564  06C3  304E               	movlw	78
   565  06C4  120A  118A  2759  120A  118A  	fcall	_LCD_Init
   566  06C9                     l982:
   567                           
   568                           ;main.c: 11:     }
   569  06C9  120A  118A  2720  120A  118A  	fcall	_write
   570  06CE                     l984:
   571                           
   572                           ;main.c: 13: }
   573  06CE  1283               	bcf	3,5	;RP0=0, select bank0
   574  06CF  1303               	bcf	3,6	;RP1=0, select bank0
   575  06D0  1406               	bsf	6,0	;volatile
   576  06D1                     l986:
   577                           
   578                           ;main.c: 14: void write(void){
   579  06D1  3050               	movlw	80
   580  06D2  00F0               	movwf	Delay@counter
   581  06D3  30C3               	movlw	195
   582  06D4  00F1               	movwf	Delay@counter+1
   583  06D5  120A  118A  2611  120A  118A  	fcall	_Delay
   584  06DA                     l988:
   585                           
   586                           ;main.c: 15:     LCD_Set_Cursor(1, 1);
   587  06DA  1283               	bcf	3,5	;RP0=0, select bank0
   588  06DB  1303               	bcf	3,6	;RP1=0, select bank0
   589  06DC  1006               	bcf	6,0	;volatile
   590  06DD                     l990:
   591                           
   592                           ;main.c: 16:     LCD_Write_String(" iiiiiiiiiiiiiiiii");
   593  06DD  3050               	movlw	80
   594  06DE  00F0               	movwf	Delay@counter
   595  06DF  30C3               	movlw	195
   596  06E0  00F1               	movwf	Delay@counter+1
   597  06E1  120A  118A  2611  120A  118A  	fcall	_Delay
   598  06E6  2ECE               	goto	l984
   599  06E7  120A  118A  2800   	ljmp	start
   600  06EA                     __end_of_main:
   601                           
   602                           	psect	text1
   603  0720                     __ptext1:	
   604 ;; *************** function _write *****************
   605 ;; Defined at:
   606 ;;		line 20 in file "main.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;		None
   609 ;; Auto vars:     Size  Location     Type
   610 ;;		None
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      void 
   613 ;; Registers used:
   614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   620 ;;      Params:         0       0       0       0       0
   621 ;;      Locals:         0       0       0       0       0
   622 ;;      Temps:          0       0       0       0       0
   623 ;;      Totals:         0       0       0       0       0
   624 ;;Total ram usage:        0 bytes
   625 ;; Hardware stack levels used:    1
   626 ;; Hardware stack levels required when called:    6
   627 ;; This function calls:
   628 ;;		_LCD_Set_Cursor
   629 ;;		_LCD_Write_String
   630 ;; This function is called by:
   631 ;;		_main
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           
   636                           ;psect for function _write
   637  0720                     _write:
   638  0720                     l968:	
   639                           ;incstack = 0
   640                           ; Regs used in _write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   641                           
   642                           
   643                           ;main.c: 21:     LCD_Set_Cursor(4, 1);
   644  0720  01F6               	clrf	LCD_Set_Cursor@COL
   645  0721  0AF6               	incf	LCD_Set_Cursor@COL,f
   646  0722  3001               	movlw	1
   647  0723  120A  118A  26EA  120A  118A  	fcall	_LCD_Set_Cursor
   648                           
   649                           ;main.c: 22:     LCD_Write_String(" :)))))))))))))))");
   650  0728  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   651  0729  120A  118A  2696  120A  118A  	fcall	_LCD_Write_String
   652                           
   653                           ;main.c: 23: }
   654  072E  01F6               	clrf	LCD_Set_Cursor@COL
   655  072F  0AF6               	incf	LCD_Set_Cursor@COL,f
   656  0730  3002               	movlw	2
   657  0731  120A  118A  26EA  120A  118A  	fcall	_LCD_Set_Cursor
   658                           
   659                           ;main.c: 24: void Delay(unsigned int counter){
   660  0736  3026               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   661  0737  120A  118A  2696  120A  118A  	fcall	_LCD_Write_String
   662                           
   663                           ;main.c: 25:   while(counter>0) counter--;
   664  073C  01F6               	clrf	LCD_Set_Cursor@COL
   665  073D  0AF6               	incf	LCD_Set_Cursor@COL,f
   666  073E  3003               	movlw	3
   667  073F  120A  118A  26EA  120A  118A  	fcall	_LCD_Set_Cursor
   668                           
   669                           ;main.c: 26: }
   670  0744  3034               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   671  0745  120A  118A  2696  120A  118A  	fcall	_LCD_Write_String
   672  074A  01F6               	clrf	LCD_Set_Cursor@COL
   673  074B  0AF6               	incf	LCD_Set_Cursor@COL,f
   674  074C  3004               	movlw	4
   675  074D  120A  118A  26EA  120A  118A  	fcall	_LCD_Set_Cursor
   676  0752  3014               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   677  0753  120A  118A  2696  120A  118A  	fcall	_LCD_Write_String
   678  0758                     l27:
   679  0758  0008               	return
   680  0759                     __end_of_write:
   681                           
   682                           	psect	text2
   683  0696                     __ptext2:	
   684 ;; *************** function _LCD_Write_String *****************
   685 ;; Defined at:
   686 ;;		line 119 in file "I2C_LCD.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;  Str             1    wreg     PTR unsigned char 
   689 ;;		 -> STR_4(18), STR_3(12), STR_2(14), STR_1(19), 
   690 ;; Auto vars:     Size  Location     Type
   691 ;;  Str             1    8[COMMON] PTR unsigned char 
   692 ;;		 -> STR_4(18), STR_3(12), STR_2(14), STR_1(19), 
   693 ;;  i               2    6[COMMON] int 
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   703 ;;      Params:         0       0       0       0       0
   704 ;;      Locals:         3       0       0       0       0
   705 ;;      Temps:          0       0       0       0       0
   706 ;;      Totals:         3       0       0       0       0
   707 ;;Total ram usage:        3 bytes
   708 ;; Hardware stack levels used:    1
   709 ;; Hardware stack levels required when called:    5
   710 ;; This function calls:
   711 ;;		_LCD_Write_Char
   712 ;; This function is called by:
   713 ;;		_write
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           
   718                           ;psect for function _LCD_Write_String
   719  0696                     _LCD_Write_String:
   720                           
   721                           ;incstack = 0
   722                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   723                           ;LCD_Write_String@Str stored from wreg
   724  0696  00F8               	movwf	LCD_Write_String@Str
   725  0697                     l960:
   726                           
   727                           ;I2C_LCD.c: 119: void LCD_Write_String(char* Str);I2C_LCD.c: 120: {;I2C_LCD.c: 121:   fo
      +                          r(int i=0; Str[i]!='\0'; i++)
   728  0697  01F6               	clrf	LCD_Write_String@i
   729  0698  01F7               	clrf	LCD_Write_String@i+1
   730  0699  2EAD               	goto	l966
   731  069A                     l962:
   732                           
   733                           ;I2C_LCD.c: 122:     LCD_Write_Char(Str[i]);
   734  069A  0876               	movf	LCD_Write_String@i,w
   735  069B  0778               	addwf	LCD_Write_String@Str,w
   736  069C  0084               	movwf	4
   737  069D  120A  118A  2003  120A  118A  	fcall	stringdir
   738  06A2  120A  118A  267B  120A  118A  	fcall	_LCD_Write_Char
   739  06A7                     l964:
   740  06A7  3001               	movlw	1
   741  06A8  07F6               	addwf	LCD_Write_String@i,f
   742  06A9  1803               	skipnc
   743  06AA  0AF7               	incf	LCD_Write_String@i+1,f
   744  06AB  3000               	movlw	0
   745  06AC  07F7               	addwf	LCD_Write_String@i+1,f
   746  06AD                     l966:
   747  06AD  0876               	movf	LCD_Write_String@i,w
   748  06AE  0778               	addwf	LCD_Write_String@Str,w
   749  06AF  0084               	movwf	4
   750  06B0  120A  118A  2003  120A  118A  	fcall	stringdir
   751  06B5  3A00               	xorlw	0
   752  06B6  1D03               	skipz
   753  06B7  2EB9               	goto	u91
   754  06B8  2EBA               	goto	u90
   755  06B9                     u91:
   756  06B9  2E9A               	goto	l962
   757  06BA                     u90:
   758  06BA                     l132:
   759  06BA  0008               	return
   760  06BB                     __end_of_LCD_Write_String:
   761                           
   762                           	psect	text3
   763  067B                     __ptext3:	
   764 ;; *************** function _LCD_Write_Char *****************
   765 ;; Defined at:
   766 ;;		line 113 in file "I2C_LCD.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;  Data            1    wreg     unsigned char 
   769 ;; Auto vars:     Size  Location     Type
   770 ;;  Data            1    5[COMMON] unsigned char 
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   780 ;;      Params:         0       0       0       0       0
   781 ;;      Locals:         1       0       0       0       0
   782 ;;      Temps:          1       0       0       0       0
   783 ;;      Totals:         2       0       0       0       0
   784 ;;Total ram usage:        2 bytes
   785 ;; Hardware stack levels used:    1
   786 ;; Hardware stack levels required when called:    4
   787 ;; This function calls:
   788 ;;		_LCD_Write_4Bit
   789 ;; This function is called by:
   790 ;;		_LCD_Write_String
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           
   795                           ;psect for function _LCD_Write_Char
   796  067B                     _LCD_Write_Char:
   797                           
   798                           ;incstack = 0
   799                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   800                           ;LCD_Write_Char@Data stored from wreg
   801  067B  00F5               	movwf	LCD_Write_Char@Data
   802  067C                     l778:
   803                           
   804                           ;I2C_LCD.c: 113: void LCD_Write_Char(char Data);I2C_LCD.c: 114: {;I2C_LCD.c: 115:   RS =
      +                           1;
   805  067C  01FB               	clrf	_RS
   806  067D  0AFB               	incf	_RS,f
   807  067E                     l780:
   808                           
   809                           ;I2C_LCD.c: 116:   LCD_Write_4Bit(Data & 0xF0);
   810  067E  0875               	movf	LCD_Write_Char@Data,w
   811  067F  39F0               	andlw	240
   812  0680  120A  118A  2648  120A  118A  	fcall	_LCD_Write_4Bit
   813                           
   814                           ;I2C_LCD.c: 117:   LCD_Write_4Bit((Data << 4) & 0xF0);
   815  0685  0875               	movf	LCD_Write_Char@Data,w
   816  0686  00F4               	movwf	??_LCD_Write_Char
   817  0687  3003               	movlw	3
   818  0688                     u55:
   819  0688  1003               	clrc
   820  0689  0DF4               	rlf	??_LCD_Write_Char,f
   821  068A  3EFF               	addlw	-1
   822  068B  1D03               	skipz
   823  068C  2E88               	goto	u55
   824  068D  1003               	clrc
   825  068E  0D74               	rlf	??_LCD_Write_Char,w
   826  068F  39F0               	andlw	240
   827  0690  120A  118A  2648  120A  118A  	fcall	_LCD_Write_4Bit
   828  0695                     l126:
   829  0695  0008               	return
   830  0696                     __end_of_LCD_Write_Char:
   831                           
   832                           	psect	text4
   833  06EA                     __ptext4:	
   834 ;; *************** function _LCD_Set_Cursor *****************
   835 ;; Defined at:
   836 ;;		line 124 in file "I2C_LCD.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;  ROW             1    wreg     unsigned char 
   839 ;;  COL             1    6[COMMON] unsigned char 
   840 ;; Auto vars:     Size  Location     Type
   841 ;;  ROW             1    9[COMMON] unsigned char 
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   851 ;;      Params:         1       0       0       0       0
   852 ;;      Locals:         1       0       0       0       0
   853 ;;      Temps:          2       0       0       0       0
   854 ;;      Totals:         4       0       0       0       0
   855 ;;Total ram usage:        4 bytes
   856 ;; Hardware stack levels used:    1
   857 ;; Hardware stack levels required when called:    5
   858 ;; This function calls:
   859 ;;		_LCD_CMD
   860 ;; This function is called by:
   861 ;;		_write
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           
   866                           ;psect for function _LCD_Set_Cursor
   867  06EA                     _LCD_Set_Cursor:
   868                           
   869                           ;incstack = 0
   870                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   871                           ;LCD_Set_Cursor@ROW stored from wreg
   872  06EA  00F9               	movwf	LCD_Set_Cursor@ROW
   873  06EB                     l944:
   874                           
   875                           ;I2C_LCD.c: 124: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_LCD.c: 12
      +                          5: {;I2C_LCD.c: 126:   switch(ROW)
   876  06EB  2F0C               	goto	l954
   877  06EC                     l946:
   878                           
   879                           ;I2C_LCD.c: 129:       LCD_CMD(0xC0 + COL-1);
   880  06EC  0876               	movf	LCD_Set_Cursor@COL,w
   881  06ED  3EBF               	addlw	191
   882  06EE  120A  118A  2661  120A  118A  	fcall	_LCD_CMD
   883                           
   884                           ;I2C_LCD.c: 130:       break;
   885  06F3  2F1F               	goto	l141
   886  06F4                     l948:
   887                           
   888                           ;I2C_LCD.c: 132:       LCD_CMD(0x94 + COL-1);
   889  06F4  0876               	movf	LCD_Set_Cursor@COL,w
   890  06F5  3E93               	addlw	147
   891  06F6  120A  118A  2661  120A  118A  	fcall	_LCD_CMD
   892                           
   893                           ;I2C_LCD.c: 133:       break;
   894  06FB  2F1F               	goto	l141
   895  06FC                     l950:
   896                           
   897                           ;I2C_LCD.c: 135:       LCD_CMD(0xD4 + COL-1);
   898  06FC  0876               	movf	LCD_Set_Cursor@COL,w
   899  06FD  3ED3               	addlw	211
   900  06FE  120A  118A  2661  120A  118A  	fcall	_LCD_CMD
   901                           
   902                           ;I2C_LCD.c: 136:       break;
   903  0703  2F1F               	goto	l141
   904  0704                     l952:
   905                           
   906                           ;I2C_LCD.c: 139:       LCD_CMD(0x80 + COL-1);
   907  0704  0876               	movf	LCD_Set_Cursor@COL,w
   908  0705  3E7F               	addlw	127
   909  0706  120A  118A  2661  120A  118A  	fcall	_LCD_CMD
   910                           
   911                           ;I2C_LCD.c: 140:   }
   912  070B  2F1F               	goto	l141
   913  070C                     l954:
   914  070C  0879               	movf	LCD_Set_Cursor@ROW,w
   915  070D  00F7               	movwf	??_LCD_Set_Cursor
   916  070E  01F8               	clrf	??_LCD_Set_Cursor+1
   917                           
   918                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   919                           ; Switch size 1, requested type "simple"
   920                           ; Number of cases is 1, Range of values is 0 to 0
   921                           ; switch strategies available:
   922                           ; Name         Instructions Cycles
   923                           ; simple_byte            4     3 (average)
   924                           ; direct_byte           11     8 (fixed)
   925                           ; jumptable            260     6 (fixed)
   926                           ;	Chosen strategy is simple_byte
   927  070F  0878               	movf	??_LCD_Set_Cursor+1,w
   928  0710  3A00               	xorlw	0	; case 0
   929  0711  1903               	skipnz
   930  0712  2F14               	goto	l1012
   931  0713  2F04               	goto	l952
   932  0714                     l1012:
   933                           
   934                           ; Switch size 1, requested type "simple"
   935                           ; Number of cases is 3, Range of values is 2 to 4
   936                           ; switch strategies available:
   937                           ; Name         Instructions Cycles
   938                           ; simple_byte           10     6 (average)
   939                           ; direct_byte           20    11 (fixed)
   940                           ; jumptable            263     9 (fixed)
   941                           ;	Chosen strategy is simple_byte
   942  0714  0877               	movf	??_LCD_Set_Cursor,w
   943  0715  3A02               	xorlw	2	; case 2
   944  0716  1903               	skipnz
   945  0717  2EEC               	goto	l946
   946  0718  3A01               	xorlw	1	; case 3
   947  0719  1903               	skipnz
   948  071A  2EF4               	goto	l948
   949  071B  3A07               	xorlw	7	; case 4
   950  071C  1903               	skipnz
   951  071D  2EFC               	goto	l950
   952  071E  2F04               	goto	l952
   953  071F                     l141:
   954  071F  0008               	return
   955  0720                     __end_of_LCD_Set_Cursor:
   956                           
   957                           	psect	text5
   958  0759                     __ptext5:	
   959 ;; *************** function _LCD_Init *****************
   960 ;; Defined at:
   961 ;;		line 70 in file "I2C_LCD.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  I2C_Add         1    wreg     unsigned char 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  I2C_Add         1    9[COMMON] unsigned char 
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   975 ;;      Params:         0       0       0       0       0
   976 ;;      Locals:         1       0       0       0       0
   977 ;;      Temps:          3       0       0       0       0
   978 ;;      Totals:         4       0       0       0       0
   979 ;;Total ram usage:        4 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; Hardware stack levels required when called:    5
   982 ;; This function calls:
   983 ;;		_IO_Expander_Write
   984 ;;		_LCD_CMD
   985 ;; This function is called by:
   986 ;;		_main
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           
   991                           ;psect for function _LCD_Init
   992  0759                     _LCD_Init:
   993                           
   994                           ;incstack = 0
   995                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   996                           ;LCD_Init@I2C_Add stored from wreg
   997  0759  00F9               	movwf	LCD_Init@I2C_Add
   998  075A                     l816:
   999                           
  1000                           ;I2C_LCD.c: 70: void LCD_Init(unsigned char I2C_Add);I2C_LCD.c: 71: {;I2C_LCD.c: 72:   i
      +                          2c_add = I2C_Add;
  1001  075A  0879               	movf	LCD_Init@I2C_Add,w
  1002  075B  00FF               	movwf	btemp+1
  1003  075C  087F               	movf	btemp+1,w
  1004  075D  00FA               	movwf	_i2c_add
  1005  075E                     l818:
  1006                           
  1007                           ;I2C_LCD.c: 73:   IO_Expander_Write(0x00);
  1008  075E  3000               	movlw	0
  1009  075F  120A  118A  262F  120A  118A  	fcall	_IO_Expander_Write
  1010  0764                     l820:
  1011                           
  1012                           ;I2C_LCD.c: 74:   _delay((unsigned long)((30)*(16000000/4000.0)));
  1013  0764  309C               	movlw	156
  1014  0765  00F7               	movwf	??_LCD_Init+1
  1015  0766  30D7               	movlw	215
  1016  0767  00F6               	movwf	??_LCD_Init
  1017  0768                     u117:
  1018  0768  0BF6               	decfsz	??_LCD_Init,f
  1019  0769  2F68               	goto	u117
  1020  076A  0BF7               	decfsz	??_LCD_Init+1,f
  1021  076B  2F68               	goto	u117
  1022  076C                     l822:
  1023                           
  1024                           ;I2C_LCD.c: 75:   LCD_CMD(0x03);
  1025  076C  3003               	movlw	3
  1026  076D  120A  118A  2661  120A  118A  	fcall	_LCD_CMD
  1027  0772                     l824:
  1028                           
  1029                           ;I2C_LCD.c: 76:   _delay((unsigned long)((5)*(16000000/4000.0)));
  1030  0772  301A               	movlw	26
  1031  0773  00F7               	movwf	??_LCD_Init+1
  1032  0774  30F8               	movlw	248
  1033  0775  00F6               	movwf	??_LCD_Init
  1034  0776                     u127:
  1035  0776  0BF6               	decfsz	??_LCD_Init,f
  1036  0777  2F76               	goto	u127
  1037  0778  0BF7               	decfsz	??_LCD_Init+1,f
  1038  0779  2F76               	goto	u127
  1039  077A  0000               	nop
  1040  077B                     l826:
  1041                           
  1042                           ;I2C_LCD.c: 77:   LCD_CMD(0x03);
  1043  077B  3003               	movlw	3
  1044  077C  120A  118A  2661  120A  118A  	fcall	_LCD_CMD
  1045  0781                     l828:
  1046                           
  1047                           ;I2C_LCD.c: 78:   _delay((unsigned long)((5)*(16000000/4000.0)));
  1048  0781  301A               	movlw	26
  1049  0782  00F7               	movwf	??_LCD_Init+1
  1050  0783  30F8               	movlw	248
  1051  0784  00F6               	movwf	??_LCD_Init
  1052  0785                     u137:
  1053  0785  0BF6               	decfsz	??_LCD_Init,f
  1054  0786  2F85               	goto	u137
  1055  0787  0BF7               	decfsz	??_LCD_Init+1,f
  1056  0788  2F85               	goto	u137
  1057  0789  0000               	nop
  1058  078A                     l830:
  1059                           
  1060                           ;I2C_LCD.c: 79:   LCD_CMD(0x03);
  1061  078A  3003               	movlw	3
  1062  078B  120A  118A  2661  120A  118A  	fcall	_LCD_CMD
  1063  0790                     l832:
  1064                           
  1065                           ;I2C_LCD.c: 80:   _delay((unsigned long)((5)*(16000000/4000.0)));
  1066  0790  301A               	movlw	26
  1067  0791  00F7               	movwf	??_LCD_Init+1
  1068  0792  30F8               	movlw	248
  1069  0793  00F6               	movwf	??_LCD_Init
  1070  0794                     u147:
  1071  0794  0BF6               	decfsz	??_LCD_Init,f
  1072  0795  2F94               	goto	u147
  1073  0796  0BF7               	decfsz	??_LCD_Init+1,f
  1074  0797  2F94               	goto	u147
  1075  0798  0000               	nop
  1076  0799                     l834:
  1077                           
  1078                           ;I2C_LCD.c: 81:   LCD_CMD(0x02);
  1079  0799  3002               	movlw	2
  1080  079A  120A  118A  2661  120A  118A  	fcall	_LCD_CMD
  1081  079F                     l836:
  1082                           
  1083                           ;I2C_LCD.c: 82:   _delay((unsigned long)((5)*(16000000/4000.0)));
  1084  079F  301A               	movlw	26
  1085  07A0  00F7               	movwf	??_LCD_Init+1
  1086  07A1  30F8               	movlw	248
  1087  07A2  00F6               	movwf	??_LCD_Init
  1088  07A3                     u157:
  1089  07A3  0BF6               	decfsz	??_LCD_Init,f
  1090  07A4  2FA3               	goto	u157
  1091  07A5  0BF7               	decfsz	??_LCD_Init+1,f
  1092  07A6  2FA3               	goto	u157
  1093  07A7  0000               	nop
  1094  07A8                     l838:
  1095                           
  1096                           ;I2C_LCD.c: 83:   LCD_CMD(0x20 | (2 << 2));
  1097  07A8  3028               	movlw	40
  1098  07A9  120A  118A  2661  120A  118A  	fcall	_LCD_CMD
  1099  07AE                     l840:
  1100                           
  1101                           ;I2C_LCD.c: 84:   _delay((unsigned long)((50)*(16000000/4000.0)));
  1102  07AE  3002               	movlw	2
  1103  07AF  00F8               	movwf	??_LCD_Init+2
  1104  07B0  3004               	movlw	4
  1105  07B1  00F7               	movwf	??_LCD_Init+1
  1106  07B2  30BA               	movlw	186
  1107  07B3  00F6               	movwf	??_LCD_Init
  1108  07B4                     u167:
  1109  07B4  0BF6               	decfsz	??_LCD_Init,f
  1110  07B5  2FB4               	goto	u167
  1111  07B6  0BF7               	decfsz	??_LCD_Init+1,f
  1112  07B7  2FB4               	goto	u167
  1113  07B8  0BF8               	decfsz	??_LCD_Init+2,f
  1114  07B9  2FB4               	goto	u167
  1115  07BA  0000               	nop
  1116  07BB                     l842:
  1117                           
  1118                           ;I2C_LCD.c: 85:   LCD_CMD(0x0C);
  1119  07BB  300C               	movlw	12
  1120  07BC  120A  118A  2661  120A  118A  	fcall	_LCD_CMD
  1121  07C1                     l844:
  1122                           
  1123                           ;I2C_LCD.c: 86:   _delay((unsigned long)((50)*(16000000/4000.0)));
  1124  07C1  3002               	movlw	2
  1125  07C2  00F8               	movwf	??_LCD_Init+2
  1126  07C3  3004               	movlw	4
  1127  07C4  00F7               	movwf	??_LCD_Init+1
  1128  07C5  30BA               	movlw	186
  1129  07C6  00F6               	movwf	??_LCD_Init
  1130  07C7                     u177:
  1131  07C7  0BF6               	decfsz	??_LCD_Init,f
  1132  07C8  2FC7               	goto	u177
  1133  07C9  0BF7               	decfsz	??_LCD_Init+1,f
  1134  07CA  2FC7               	goto	u177
  1135  07CB  0BF8               	decfsz	??_LCD_Init+2,f
  1136  07CC  2FC7               	goto	u177
  1137  07CD  0000               	nop
  1138  07CE                     l846:
  1139                           
  1140                           ;I2C_LCD.c: 87:   LCD_CMD(0x01);
  1141  07CE  3001               	movlw	1
  1142  07CF  120A  118A  2661  120A  118A  	fcall	_LCD_CMD
  1143  07D4                     l848:
  1144                           
  1145                           ;I2C_LCD.c: 88:   _delay((unsigned long)((50)*(16000000/4000.0)));
  1146  07D4  3002               	movlw	2
  1147  07D5  00F8               	movwf	??_LCD_Init+2
  1148  07D6  3004               	movlw	4
  1149  07D7  00F7               	movwf	??_LCD_Init+1
  1150  07D8  30BA               	movlw	186
  1151  07D9  00F6               	movwf	??_LCD_Init
  1152  07DA                     u187:
  1153  07DA  0BF6               	decfsz	??_LCD_Init,f
  1154  07DB  2FDA               	goto	u187
  1155  07DC  0BF7               	decfsz	??_LCD_Init+1,f
  1156  07DD  2FDA               	goto	u187
  1157  07DE  0BF8               	decfsz	??_LCD_Init+2,f
  1158  07DF  2FDA               	goto	u187
  1159  07E0  0000               	nop
  1160  07E1                     l850:
  1161                           
  1162                           ;I2C_LCD.c: 89:   LCD_CMD(0x04 | 0x02);
  1163  07E1  3006               	movlw	6
  1164  07E2  120A  118A  2661  120A  118A  	fcall	_LCD_CMD
  1165  07E7                     l852:
  1166                           
  1167                           ;I2C_LCD.c: 90:   _delay((unsigned long)((50)*(16000000/4000.0)));
  1168  07E7  3002               	movlw	2
  1169  07E8  00F8               	movwf	??_LCD_Init+2
  1170  07E9  3004               	movlw	4
  1171  07EA  00F7               	movwf	??_LCD_Init+1
  1172  07EB  30BA               	movlw	186
  1173  07EC  00F6               	movwf	??_LCD_Init
  1174  07ED                     u197:
  1175  07ED  0BF6               	decfsz	??_LCD_Init,f
  1176  07EE  2FED               	goto	u197
  1177  07EF  0BF7               	decfsz	??_LCD_Init+1,f
  1178  07F0  2FED               	goto	u197
  1179  07F1  0BF8               	decfsz	??_LCD_Init+2,f
  1180  07F2  2FED               	goto	u197
  1181  07F3  0000               	nop
  1182  07F4                     l114:
  1183  07F4  0008               	return
  1184  07F5                     __end_of_LCD_Init:
  1185                           
  1186                           	psect	text6
  1187  0661                     __ptext6:	
  1188 ;; *************** function _LCD_CMD *****************
  1189 ;; Defined at:
  1190 ;;		line 107 in file "I2C_LCD.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;  CMD             1    wreg     unsigned char 
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;  CMD             1    5[COMMON] unsigned char 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1204 ;;      Params:         0       0       0       0       0
  1205 ;;      Locals:         1       0       0       0       0
  1206 ;;      Temps:          1       0       0       0       0
  1207 ;;      Totals:         2       0       0       0       0
  1208 ;;Total ram usage:        2 bytes
  1209 ;; Hardware stack levels used:    1
  1210 ;; Hardware stack levels required when called:    4
  1211 ;; This function calls:
  1212 ;;		_LCD_Write_4Bit
  1213 ;; This function is called by:
  1214 ;;		_LCD_Init
  1215 ;;		_LCD_Set_Cursor
  1216 ;;		_LCD_SL
  1217 ;;		_LCD_SR
  1218 ;;		_LCD_Clear
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           
  1223                           ;psect for function _LCD_CMD
  1224  0661                     _LCD_CMD:
  1225                           
  1226                           ;incstack = 0
  1227                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1228                           ;LCD_CMD@CMD stored from wreg
  1229  0661  00F5               	movwf	LCD_CMD@CMD
  1230  0662                     l772:
  1231                           
  1232                           ;I2C_LCD.c: 107: void LCD_CMD(unsigned char CMD);I2C_LCD.c: 108: {;I2C_LCD.c: 109:   RS 
      +                          = 0;
  1233  0662  01FB               	clrf	_RS
  1234  0663                     l774:
  1235                           
  1236                           ;I2C_LCD.c: 110:   LCD_Write_4Bit(CMD & 0xF0);
  1237  0663  0875               	movf	LCD_CMD@CMD,w
  1238  0664  39F0               	andlw	240
  1239  0665  120A  118A  2648  120A  118A  	fcall	_LCD_Write_4Bit
  1240  066A                     l776:
  1241                           
  1242                           ;I2C_LCD.c: 111:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  1243  066A  0875               	movf	LCD_CMD@CMD,w
  1244  066B  00F4               	movwf	??_LCD_CMD
  1245  066C  3003               	movlw	3
  1246  066D                     u45:
  1247  066D  1003               	clrc
  1248  066E  0DF4               	rlf	??_LCD_CMD,f
  1249  066F  3EFF               	addlw	-1
  1250  0670  1D03               	skipz
  1251  0671  2E6D               	goto	u45
  1252  0672  1003               	clrc
  1253  0673  0D74               	rlf	??_LCD_CMD,w
  1254  0674  39F0               	andlw	240
  1255  0675  120A  118A  2648  120A  118A  	fcall	_LCD_Write_4Bit
  1256  067A                     l123:
  1257  067A  0008               	return
  1258  067B                     __end_of_LCD_CMD:
  1259                           
  1260                           	psect	text7
  1261  0648                     __ptext7:	
  1262 ;; *************** function _LCD_Write_4Bit *****************
  1263 ;; Defined at:
  1264 ;;		line 99 in file "I2C_LCD.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;  Nibble          1    wreg     unsigned char 
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;  Nibble          1    3[COMMON] unsigned char 
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  1    wreg      void 
  1271 ;; Registers used:
  1272 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1278 ;;      Params:         0       0       0       0       0
  1279 ;;      Locals:         1       0       0       0       0
  1280 ;;      Temps:          1       0       0       0       0
  1281 ;;      Totals:         2       0       0       0       0
  1282 ;;Total ram usage:        2 bytes
  1283 ;; Hardware stack levels used:    1
  1284 ;; Hardware stack levels required when called:    3
  1285 ;; This function calls:
  1286 ;;		_IO_Expander_Write
  1287 ;; This function is called by:
  1288 ;;		_LCD_CMD
  1289 ;;		_LCD_Write_Char
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293                           
  1294                           ;psect for function _LCD_Write_4Bit
  1295  0648                     _LCD_Write_4Bit:
  1296                           
  1297                           ;incstack = 0
  1298                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1299                           ;LCD_Write_4Bit@Nibble stored from wreg
  1300  0648  00F3               	movwf	LCD_Write_4Bit@Nibble
  1301  0649                     l766:
  1302                           
  1303                           ;I2C_LCD.c: 99: void LCD_Write_4Bit(unsigned char Nibble);I2C_LCD.c: 100: {;I2C_LCD.c: 1
      +                          02:   Nibble |= RS;
  1304  0649  087B               	movf	_RS,w
  1305  064A  00FF               	movwf	btemp+1
  1306  064B  087F               	movf	btemp+1,w
  1307  064C  04F3               	iorwf	LCD_Write_4Bit@Nibble,f
  1308  064D                     l768:
  1309                           
  1310                           ;I2C_LCD.c: 103:   IO_Expander_Write(Nibble | 0x04);
  1311  064D  0873               	movf	LCD_Write_4Bit@Nibble,w
  1312  064E  3804               	iorlw	4
  1313  064F  120A  118A  262F  120A  118A  	fcall	_IO_Expander_Write
  1314  0654                     l770:
  1315                           
  1316                           ;I2C_LCD.c: 104:   IO_Expander_Write(Nibble & 0xFB);
  1317  0654  0873               	movf	LCD_Write_4Bit@Nibble,w
  1318  0655  39FB               	andlw	251
  1319  0656  120A  118A  262F  120A  118A  	fcall	_IO_Expander_Write
  1320                           
  1321                           ;I2C_LCD.c: 105:   _delay((unsigned long)((50)*(16000000/4000000.0)));
  1322  065B  3042               	movlw	66
  1323  065C  00F2               	movwf	??_LCD_Write_4Bit
  1324  065D                     u207:
  1325  065D  0BF2               	decfsz	??_LCD_Write_4Bit,f
  1326  065E  2E5D               	goto	u207
  1327  065F  0000               	nop
  1328  0660                     l120:
  1329  0660  0008               	return
  1330  0661                     __end_of_LCD_Write_4Bit:
  1331                           
  1332                           	psect	text8
  1333  062F                     __ptext8:	
  1334 ;; *************** function _IO_Expander_Write *****************
  1335 ;; Defined at:
  1336 ;;		line 92 in file "I2C_LCD.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;  Data            1    wreg     unsigned char 
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;  Data            1    1[COMMON] unsigned char 
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      void 
  1343 ;; Registers used:
  1344 ;;		wreg, status,2, status,0, pclath, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1350 ;;      Params:         0       0       0       0       0
  1351 ;;      Locals:         1       0       0       0       0
  1352 ;;      Temps:          0       0       0       0       0
  1353 ;;      Totals:         1       0       0       0       0
  1354 ;;Total ram usage:        1 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; Hardware stack levels required when called:    2
  1357 ;; This function calls:
  1358 ;;		_I2C_Master_Start
  1359 ;;		_I2C_Master_Stop
  1360 ;;		_I2C_Master_Write
  1361 ;; This function is called by:
  1362 ;;		_LCD_Init
  1363 ;;		_LCD_Write_4Bit
  1364 ;;		_Backlight
  1365 ;;		_noBacklight
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           
  1370                           ;psect for function _IO_Expander_Write
  1371  062F                     _IO_Expander_Write:
  1372                           
  1373                           ;incstack = 0
  1374                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  1375                           ;IO_Expander_Write@Data stored from wreg
  1376  062F  00F1               	movwf	IO_Expander_Write@Data
  1377  0630                     l764:
  1378                           
  1379                           ;I2C_LCD.c: 92: void IO_Expander_Write(unsigned char Data);I2C_LCD.c: 93: {;I2C_LCD.c: 9
      +                          4:   I2C_Master_Start();
  1380  0630  120A  118A  25E5  120A  118A  	fcall	_I2C_Master_Start
  1381                           
  1382                           ;I2C_LCD.c: 95:   I2C_Master_Write(i2c_add);
  1383  0635  087A               	movf	_i2c_add,w
  1384  0636  120A  118A  261F  120A  118A  	fcall	_I2C_Master_Write
  1385                           
  1386                           ;I2C_LCD.c: 96:   I2C_Master_Write(Data | BackLight_State);
  1387  063B  0871               	movf	IO_Expander_Write@Data,w
  1388  063C  047C               	iorwf	_BackLight_State,w
  1389  063D  120A  118A  261F  120A  118A  	fcall	_I2C_Master_Write
  1390                           
  1391                           ;I2C_LCD.c: 97:   I2C_Master_Stop();
  1392  0642  120A  118A  25EE  120A  118A  	fcall	_I2C_Master_Stop
  1393  0647                     l117:
  1394  0647  0008               	return
  1395  0648                     __end_of_IO_Expander_Write:
  1396                           
  1397                           	psect	text9
  1398  061F                     __ptext9:	
  1399 ;; *************** function _I2C_Master_Write *****************
  1400 ;; Defined at:
  1401 ;;		line 49 in file "I2C_LCD.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;  data            1    wreg     unsigned char 
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;  data            1    0[COMMON] unsigned char 
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  1    wreg      unsigned char 
  1408 ;; Registers used:
  1409 ;;		wreg, status,2, status,0, pclath, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1415 ;;      Params:         0       0       0       0       0
  1416 ;;      Locals:         1       0       0       0       0
  1417 ;;      Temps:          0       0       0       0       0
  1418 ;;      Totals:         1       0       0       0       0
  1419 ;;Total ram usage:        1 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; Hardware stack levels required when called:    1
  1422 ;; This function calls:
  1423 ;;		_I2C_Master_Wait
  1424 ;; This function is called by:
  1425 ;;		_IO_Expander_Write
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           
  1430                           ;psect for function _I2C_Master_Write
  1431  061F                     _I2C_Master_Write:
  1432                           
  1433                           ;incstack = 0
  1434                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1435                           ;I2C_Master_Write@data stored from wreg
  1436  061F  00F0               	movwf	I2C_Master_Write@data
  1437  0620                     l760:
  1438                           
  1439                           ;I2C_LCD.c: 49: unsigned char I2C_Master_Write(unsigned char data);I2C_LCD.c: 50: {;I2C_
      +                          LCD.c: 51:   I2C_Master_Wait();
  1440  0620  120A  118A  2604  120A  118A  	fcall	_I2C_Master_Wait
  1441  0625                     l762:
  1442                           
  1443                           ;I2C_LCD.c: 52:   SSPBUF = data;
  1444  0625  0870               	movf	I2C_Master_Write@data,w
  1445  0626  1283               	bcf	3,5	;RP0=0, select bank0
  1446  0627  1303               	bcf	3,6	;RP1=0, select bank0
  1447  0628  0093               	movwf	19	;volatile
  1448  0629                     l102:	
  1449                           ;I2C_LCD.c: 53:   while(!SSPIF);
  1450                           
  1451  0629  1D8C               	btfss	12,3	;volatile
  1452  062A  2E2C               	goto	u31
  1453  062B  2E2D               	goto	u30
  1454  062C                     u31:
  1455  062C  2E29               	goto	l102
  1456  062D                     u30:
  1457  062D                     l104:
  1458                           
  1459                           ;I2C_LCD.c: 54:   SSPIF = 0;
  1460  062D  118C               	bcf	12,3	;volatile
  1461  062E                     l105:	
  1462                           ;I2C_LCD.c: 55:   return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  1463                           
  1464  062E  0008               	return
  1465  062F                     __end_of_I2C_Master_Write:
  1466                           
  1467                           	psect	text10
  1468  05EE                     __ptext10:	
  1469 ;; *************** function _I2C_Master_Stop *****************
  1470 ;; Defined at:
  1471 ;;		line 32 in file "I2C_LCD.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0, pclath, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1485 ;;      Params:         0       0       0       0       0
  1486 ;;      Locals:         0       0       0       0       0
  1487 ;;      Temps:          0       0       0       0       0
  1488 ;;      Totals:         0       0       0       0       0
  1489 ;;Total ram usage:        0 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:    1
  1492 ;; This function calls:
  1493 ;;		_I2C_Master_Wait
  1494 ;; This function is called by:
  1495 ;;		_IO_Expander_Write
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           
  1500                           ;psect for function _I2C_Master_Stop
  1501  05EE                     _I2C_Master_Stop:
  1502  05EE                     l756:	
  1503                           ;incstack = 0
  1504                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1505                           
  1506                           
  1507                           ;I2C_LCD.c: 34:   I2C_Master_Wait();
  1508  05EE  120A  118A  2604  120A  118A  	fcall	_I2C_Master_Wait
  1509  05F3                     l758:
  1510                           
  1511                           ;I2C_LCD.c: 35:   PEN = 1;
  1512  05F3  1683               	bsf	3,5	;RP0=1, select bank1
  1513  05F4  1303               	bcf	3,6	;RP1=0, select bank1
  1514  05F5  1511               	bsf	17,2	;volatile
  1515  05F6                     l93:
  1516  05F6  0008               	return
  1517  05F7                     __end_of_I2C_Master_Stop:
  1518                           
  1519                           	psect	text11
  1520  05E5                     __ptext11:	
  1521 ;; *************** function _I2C_Master_Start *****************
  1522 ;; Defined at:
  1523 ;;		line 22 in file "I2C_LCD.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;		None
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;		None
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg, status,2, status,0, pclath, cstack
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1537 ;;      Params:         0       0       0       0       0
  1538 ;;      Locals:         0       0       0       0       0
  1539 ;;      Temps:          0       0       0       0       0
  1540 ;;      Totals:         0       0       0       0       0
  1541 ;;Total ram usage:        0 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; Hardware stack levels required when called:    1
  1544 ;; This function calls:
  1545 ;;		_I2C_Master_Wait
  1546 ;; This function is called by:
  1547 ;;		_IO_Expander_Write
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           
  1552                           ;psect for function _I2C_Master_Start
  1553  05E5                     _I2C_Master_Start:
  1554  05E5                     l752:	
  1555                           ;incstack = 0
  1556                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1557                           
  1558                           
  1559                           ;I2C_LCD.c: 24:   I2C_Master_Wait();
  1560  05E5  120A  118A  2604  120A  118A  	fcall	_I2C_Master_Wait
  1561  05EA                     l754:
  1562                           
  1563                           ;I2C_LCD.c: 25:   SEN = 1;
  1564  05EA  1683               	bsf	3,5	;RP0=1, select bank1
  1565  05EB  1303               	bcf	3,6	;RP1=0, select bank1
  1566  05EC  1411               	bsf	17,0	;volatile
  1567  05ED                     l87:
  1568  05ED  0008               	return
  1569  05EE                     __end_of_I2C_Master_Start:
  1570                           
  1571                           	psect	text12
  1572  0604                     __ptext12:	
  1573 ;; *************** function _I2C_Master_Wait *****************
  1574 ;; Defined at:
  1575 ;;		line 18 in file "I2C_LCD.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;		None
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;		None
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      void 
  1582 ;; Registers used:
  1583 ;;		wreg, status,2
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1589 ;;      Params:         0       0       0       0       0
  1590 ;;      Locals:         0       0       0       0       0
  1591 ;;      Temps:          0       0       0       0       0
  1592 ;;      Totals:         0       0       0       0       0
  1593 ;;Total ram usage:        0 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; This function calls:
  1596 ;;		Nothing
  1597 ;; This function is called by:
  1598 ;;		_I2C_Master_Start
  1599 ;;		_I2C_Master_Stop
  1600 ;;		_I2C_Master_Write
  1601 ;;		_I2C_Master_RepeatedStart
  1602 ;;		_I2C_ACK
  1603 ;;		_I2C_NACK
  1604 ;;		_I2C_Read_Byte
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           
  1609                           ;psect for function _I2C_Master_Wait
  1610  0604                     _I2C_Master_Wait:
  1611  0604                     l748:	
  1612                           ;incstack = 0
  1613                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1614                           
  1615  0604                     l81:	
  1616                           ;I2C_LCD.c: 20:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1617                           
  1618  0604  1683               	bsf	3,5	;RP0=1, select bank1
  1619  0605  1303               	bcf	3,6	;RP1=0, select bank1
  1620  0606  1914               	btfsc	20,2	;volatile
  1621  0607  2E09               	goto	u11
  1622  0608  2E0A               	goto	u10
  1623  0609                     u11:
  1624  0609  2E04               	goto	l81
  1625  060A                     u10:
  1626  060A                     l750:
  1627  060A  0811               	movf	17,w	;volatile
  1628  060B  391F               	andlw	31
  1629  060C  1D03               	btfss	3,2
  1630  060D  2E0F               	goto	u21
  1631  060E  2E10               	goto	u20
  1632  060F                     u21:
  1633  060F  2E04               	goto	l81
  1634  0610                     u20:
  1635  0610                     l84:
  1636  0610  0008               	return
  1637  0611                     __end_of_I2C_Master_Wait:
  1638                           
  1639                           	psect	text13
  1640  05F7                     __ptext13:	
  1641 ;; *************** function _I2C_Master_Init *****************
  1642 ;; Defined at:
  1643 ;;		line 6 in file "I2C_LCD.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;		None
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;		None
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  1    wreg      void 
  1650 ;; Registers used:
  1651 ;;		wreg, status,2
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1657 ;;      Params:         0       0       0       0       0
  1658 ;;      Locals:         0       0       0       0       0
  1659 ;;      Temps:          0       0       0       0       0
  1660 ;;      Totals:         0       0       0       0       0
  1661 ;;Total ram usage:        0 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; This function calls:
  1664 ;;		Nothing
  1665 ;; This function is called by:
  1666 ;;		_main
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           
  1671                           ;psect for function _I2C_Master_Init
  1672  05F7                     _I2C_Master_Init:
  1673  05F7                     l806:	
  1674                           ;incstack = 0
  1675                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  1676                           
  1677                           
  1678                           ;I2C_LCD.c: 8:   SSPCON = 0x38;
  1679  05F7  3038               	movlw	56
  1680  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  1681  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  1682  05FA  0094               	movwf	20	;volatile
  1683  05FB                     l808:
  1684                           
  1685                           ;I2C_LCD.c: 11:   SSPCON2 = 0x00;
  1686  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  1687  05FC  1303               	bcf	3,6	;RP1=0, select bank1
  1688  05FD  0191               	clrf	17	;volatile
  1689  05FE                     l810:
  1690                           
  1691                           ;I2C_LCD.c: 13:   SSPSTAT = 0x00;
  1692  05FE  0194               	clrf	20	;volatile
  1693                           
  1694                           ;I2C_LCD.c: 14:   SSPADD = ((16000000/4)/100000) - 1;
  1695  05FF  3027               	movlw	39
  1696  0600  0093               	movwf	19	;volatile
  1697  0601                     l812:
  1698                           
  1699                           ;I2C_LCD.c: 15:   TRISC3 = 1;
  1700  0601  1587               	bsf	7,3	;volatile
  1701  0602                     l814:
  1702                           
  1703                           ;I2C_LCD.c: 16:   TRISC4 = 1;
  1704  0602  1607               	bsf	7,4	;volatile
  1705  0603                     l78:
  1706  0603  0008               	return
  1707  0604                     __end_of_I2C_Master_Init:
  1708                           
  1709                           	psect	text14
  1710  0611                     __ptext14:	
  1711 ;; *************** function _Delay *****************
  1712 ;; Defined at:
  1713 ;;		line 30 in file "main.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  counter         2    0[COMMON] unsigned int 
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		wreg, status,2, status,0
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1727 ;;      Params:         2       0       0       0       0
  1728 ;;      Locals:         0       0       0       0       0
  1729 ;;      Temps:          0       0       0       0       0
  1730 ;;      Totals:         2       0       0       0       0
  1731 ;;Total ram usage:        2 bytes
  1732 ;; Hardware stack levels used:    1
  1733 ;; This function calls:
  1734 ;;		Nothing
  1735 ;; This function is called by:
  1736 ;;		_main
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           
  1741                           ;psect for function _Delay
  1742  0611                     _Delay:
  1743  0611                     l970:	
  1744                           ;incstack = 0
  1745                           ; Regs used in _Delay: [wreg+status,2+status,0]
  1746                           
  1747  0611  2E18               	goto	l974
  1748  0612                     l972:
  1749  0612  3001               	movlw	1
  1750  0613  02F0               	subwf	Delay@counter,f
  1751  0614  3000               	movlw	0
  1752  0615  1C03               	skipc
  1753  0616  03F1               	decf	Delay@counter+1,f
  1754  0617  02F1               	subwf	Delay@counter+1,f
  1755  0618                     l974:
  1756  0618  0870               	movf	Delay@counter,w
  1757  0619  0471               	iorwf	Delay@counter+1,w
  1758  061A  1D03               	btfss	3,2
  1759  061B  2E1D               	goto	u101
  1760  061C  2E1E               	goto	u100
  1761  061D                     u101:
  1762  061D  2E12               	goto	l972
  1763  061E                     u100:
  1764  061E                     l33:
  1765  061E  0008               	return
  1766  061F                     __end_of_Delay:
  1767  007E                     btemp	set	126	;btemp
  1768  007E                     wtemp0	set	126
  1769                           
  1770                           	psect	config
  1771                           
  1772                           ;Config register CONFIG @ 0x2007
  1773                           ;	Oscillator Selection bits
  1774                           ;	FOSC = HS, HS oscillator
  1775                           ;	Watchdog Timer Enable bit
  1776                           ;	WDTE = 0x1, unprogrammed default
  1777                           ;	Power-up Timer Enable bit
  1778                           ;	PWRTE = 0x1, unprogrammed default
  1779                           ;	Brown-out Reset Enable bit
  1780                           ;	BOREN = 0x1, unprogrammed default
  1781                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1782                           ;	LVP = 0x1, unprogrammed default
  1783                           ;	Data EEPROM Memory Code Protection bit
  1784                           ;	CPD = 0x1, unprogrammed default
  1785                           ;	Flash Program Memory Write Enable bits
  1786                           ;	WRT = 0x3, unprogrammed default
  1787                           ;	In-Circuit Debugger Mode bit
  1788                           ;	DEBUG = 0x1, unprogrammed default
  1789                           ;	Flash Program Memory Code Protection bit
  1790                           ;	CP = 0x1, unprogrammed default
  1791  2007                     	org	8199
  1792  2007  3FFE               	dw	16382

Data Sizes:
    Strings     63
    Constant    0
    Data        1
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Write_String@Str	PTR unsigned char  size(1) Largest target is 19
		 -> STR_4(CODE[18]), STR_3(CODE[12]), STR_2(CODE[14]), STR_1(CODE[19]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _write->_LCD_Set_Cursor
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1126
                              _Delay
                    _I2C_Master_Init
                           _LCD_Init
                              _write
 ---------------------------------------------------------------------------------
 (1) _write                                                0     0      0     816
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     3     3      0     312
                                              6 COMMON     3     3      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       2     2      0      90
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       4     3      1     504
                                              6 COMMON     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             4     4      0     135
                                              6 COMMON     4     4      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_CMD                                              2     2      0      90
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_4Bit                                       2     2      0      60
                                              2 COMMON     2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (5) _IO_Expander_Write                                    1     1      0      30
                                              1 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Write                                     1     1      0      15
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delay                                                2     0      2     175
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay
   _I2C_Master_Init
   _LCD_Init
     _IO_Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _write
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       D      12        0.0%
ABS                  0      0       D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Nov 19 09:27:39 2020

                         pc 0002                          l33 061E                          l27 0758  
                        l81 0604                          l84 0610                          l93 05F6  
                        l78 0603                          l87 05ED                          u10 060A  
                        u11 0609                          u20 0610                          u21 060F  
                        u30 062D                          u31 062C                          u45 066D  
                        u55 0688                          _RS 007B                          u90 06BA  
                        u91 06B9                          fsr 0004                         l102 0629  
                       l104 062D                         l120 0660                         l105 062E  
                       l114 07F4                         l123 067A                         l132 06BA  
                       l117 0647                         l141 071F                         l126 0695  
                       l810 05FE                         l812 0601                         l820 0764  
                       l814 0602                         l806 05F7                         l750 060A  
                       l830 078A                         l822 076C                         l808 05FB  
                       l752 05E5                         l760 0620                         l840 07AE  
                       l832 0790                         l824 0772                         l816 075A  
                       l754 05EA                         l762 0625                         l770 0654  
                       l850 07E1                         l842 07BB                         l834 0799  
                       l826 077B                         l818 075E                         l748 0604  
                       l756 05EE                         l764 0630                         l772 0662  
                       l852 07E7                         l844 07C1                         l836 079F  
                       l828 0781                         l780 067E                         l758 05F3  
                       l766 0649                         l774 0663                         l846 07CE  
                       l838 07A8                         l950 06FC                         l768 064D  
                       l776 066A                         l848 07D4                         l952 0704  
                       l944 06EB                         l960 0697                         l970 0611  
                       l946 06EC                         l954 070C                         l778 067C  
                       l962 069A                         l972 0612                         l948 06F4  
                       l964 06A7                         l980 06C3                         l974 0618  
                       l966 06AD                         l990 06DD                         l982 06C9  
                       l968 0720                         l984 06CE                         l976 06BB  
                       l986 06D1                         l978 06BE                         l988 06DA  
                       _RB0 0030                         u100 061E                         u101 061D  
                       u117 0768                         u207 065D                         u127 0776  
                       u137 0785                         u147 0794                         u157 07A3  
                       u167 07B4                         _PEN 048A                         u177 07C7  
                       u187 07DA                         u197 07ED                         _SEN 0488  
                       fsr0 0004             __end_of_LCD_CMD 067B         LCD_Write_String@Str 0078  
            _LCD_Set_Cursor 06EA                        l1012 0714                        STR_1 0009  
                      STR_2 002E                        STR_3 003C                        STR_4 001C  
                      _RCEN 048B                        _RSEN 0489           ?_LCD_Write_String 0070  
                      _main 06BB                        btemp 007E                        start 0000  
        ??_LCD_Write_String 0076        LCD_Write_4Bit@Nibble 0073            __end_of_LCD_Init 07F5  
          ?_I2C_Master_Init 0070            ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070  
                     ?_main 0070                       _ACKEN 048C                       _ACKDT 048D  
                     _SSPIF 0063                       _Delay 0611      __end_of_LCD_Set_Cursor 0720  
                     _write 0720                       pclath 000A                       status 0003  
                     wtemp0 007E              _LCD_Write_4Bit 0648              _LCD_Write_Char 067B  
           __initialization 07F5                __end_of_main 06EA           _IO_Expander_Write 062F  
        ?_IO_Expander_Write 0070                      ??_main 007A                   ??_LCD_CMD 0074  
                    ?_Delay 0070           ?_I2C_Master_Start 0070           ?_I2C_Master_Write 0070  
       ??_IO_Expander_Write 0071             ?_LCD_Set_Cursor 0076          ??_I2C_Master_Start 0070  
        ??_I2C_Master_Write 0070                      ?_write 0070                      _SSPADD 0093  
                    _TRISB0 0430                      _TRISC3 043B                      _TRISC4 043C  
                    _SSPCON 0014                      _SSPBUF 0013      __end_of_LCD_Write_4Bit 0661  
    __end_of_LCD_Write_Char 0696   __end_of_IO_Expander_Write 0648                __pdataCOMMON 007C  
   __end_of__initialization 07FC                   ?_LCD_Init 0070             ?_LCD_Write_4Bit 0070  
           ?_LCD_Write_Char 0070               __end_of_Delay 061F              __pcstackCOMMON 0070  
             __end_of_write 0759                     ??_Delay 0072                     ??_write 007A  
                ??_LCD_Init 0076                  __pnvCOMMON 007A  __size_of_IO_Expander_Write 0019  
                __pmaintext 06BB                     _ACKSTAT 048E   __size_of_LCD_Write_String 0025  
                   _LCD_CMD 0661                     _SSPCON2 0091                     _SSPSTAT 0094  
                __stringtab 0003                     _i2c_add 007A            ??_LCD_Set_Cursor 0077  
                   __ptext1 0720                     __ptext2 0696                     __ptext3 067B  
                   __ptext4 06EA                     __ptext5 0759                     __ptext6 0661  
                   __ptext7 0648                     __ptext8 062F                     __ptext9 061F  
  __size_of_I2C_Master_Init 000D    __size_of_I2C_Master_Wait 000D    __size_of_I2C_Master_Stop 0009  
      end_of_initialization 07FC   __size_of_I2C_Master_Start 0009   __size_of_I2C_Master_Write 0010  
                LCD_CMD@CMD 0075            ??_LCD_Write_4Bit 0072           LCD_Write_String@i 0076  
          ??_LCD_Write_Char 0074           __size_of_LCD_Init 009C                Delay@counter 0070  
          _LCD_Write_String 0696               __pidataCOMMON 05E4         start_initialization 07F5  
         ??_I2C_Master_Init 0070           ??_I2C_Master_Wait 0070           ??_I2C_Master_Stop 0070  
                  ?_LCD_CMD 0070                 __pbssCOMMON 007B                   ___latbits 0002  
          _I2C_Master_Start 05E5            _I2C_Master_Write 061F       IO_Expander_Write@Data 0071  
      I2C_Master_Write@data 0070                   __pstrings 0003              __size_of_Delay 000E  
            __size_of_write 0039                    _LCD_Init 0759                 __stringbase 0008  
          __size_of_LCD_CMD 001A    __end_of_LCD_Write_String 06BB          __end_of__stringtab 0009  
           _I2C_Master_Init 05F7             _I2C_Master_Wait 0604             _I2C_Master_Stop 05EE  
                  __ptext10 05EE                    __ptext11 05E5                    __ptext12 0604  
                  __ptext13 05F7                    __ptext14 0611     __size_of_LCD_Set_Cursor 0036  
           _BackLight_State 007C               __size_of_main 002F    __end_of_I2C_Master_Start 05EE  
  __end_of_I2C_Master_Write 062F          LCD_Write_Char@Data 0075                   stringcode 0003  
   __size_of_LCD_Write_4Bit 0019     __size_of_LCD_Write_Char 001B     __end_of_I2C_Master_Init 0604  
   __end_of_I2C_Master_Wait 0611     __end_of_I2C_Master_Stop 05F7             LCD_Init@I2C_Add 0079  
                  stringdir 0003                    stringtab 0003           LCD_Set_Cursor@COL 0076  
         LCD_Set_Cursor@ROW 0079  
